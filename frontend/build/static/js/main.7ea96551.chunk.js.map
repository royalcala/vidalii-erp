{"version":3,"sources":["components sync /.+/.route/.(tsx|js)$","components/core/routes/Default.route.tsx","components/core/session/myAccount.route.tsx","components sync /myAccount/.route/.tab/..+/.(tsx|js)$","components/core/session/myAccount.route.tab.main.tsx","components/core/session/user.edit.route.tsx","components sync /user/.edit/.route/.tab/..+/.(tsx|js)$","components/crm/contacts.edit.route.tsx","components sync /contacts/.edit/.route/.tab/..+/.(tsx|js)$","components/crm/contacts.edit.route.tab.main.tsx","components sync /Admin/.TopBar/.Menu/..+/.context/.(tsx|js)$","components/core/session/Admin.TopBar.Menu.session.context.tsx","reportWebVitals.ts","components/theme/theme.tsx","index.tsx","components/core/form/Table.View.tsx","components/core/admin/Admin.Dashboard.tsx","components/core/session/users.route.tsx","components/core/session/user.edit.route.tab.main.tsx","components/core/form/utils.tsx","components/core/admin/Admin.Doc.Header.Save.tsx","components/core/admin/Admin.Doc.Tabs.tsx","components/core/admin/Admin.Doc_.tsx","components/core/form/form.autocomple.tsx","components/core/form/form.tsx","components/core/admin/Admin.TopBar.Menu.many.rcontext.tsx","components/theme/Admin.Signin.tsx","components/core/routes/Routes.many.rcontext.tsx","components/core/admin/Admin.TopBar.Sidebar.tsx","components/core/admin/Admin.TopBar.tsx","components/core/admin/Admin.Switch.tsx","components/core/admin/Admin.tsx","components/core/dialog/dialog.simple.tsx","components/core/session/User.Session.tsx"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","route","name","parent","sidebar","Icon","AccountIcon","Component","getTabs","require","Tabs","dir","default","breadcrum","tabs","Mutation","Symbol","tab","title","mutation","useForm","control","getValues","set","values","util","inspect","replaceAll","useQuery","loading","error","data","JSON","stringify","myUser","config","type","lastname","email","alias","phone","paramaters","params","useParams","_id","user","SessionMenu","closeSession","React","useContext","Session","useState","anchorEl","setAnchorEl","handleClose","aria-label","onClick","event","currentTarget","color","keepMounted","open","Boolean","onClose","TemplateContext","desktopShown","desktopHidden","closeMenu","mobil","badgeContent","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","theme","createMuiTheme","client","GraphQLClient","url","ReactDOM","render","StrictMode","basename","Provider","value","ThemeProvider","CssBaseline","document","getElementById","useStyles","makeStyles","table","TableView","props","classes","entries","onSearch","key","console","log","Grid","container","direction","justify","alignItems","spacing","item","TextField","label","Button","variant","TableContainer","Table","className","size","TableHead","TableRow","TableCell","align","index","search","onKeyDown","TableBody","row","indexRow","Tooltip","to","parameters","nameParameter","join","style","blue","nameField","createStyles","paper","padding","textAlign","palette","text","secondary","link","display","icon","marginRight","width","height","Dashboard","Paper","xs","Breadcrumbs","Link","href","Typography","groups","users","objString","autoComplete","isMulti","loadOptions","inputValue","a","filter","group","toLowerCase","includes","root","flexGrow","button","DocSave","gql","ClientContext","p","useLocation","pathname","split","location","replace","saveDocOnClick","query","Array","from","request","Box","m","TabPanel","children","other","role","hidden","aria-labelledby","backgroundColor","background","DocTabs","activeTab","setActiveTab","TabsLabel","sort","b","Tab","a11yProps","TabsContent","AppBar","position","onChange","newValue","indicatorColor","textColor","scrollButtons","Doc","Map","customStyles","AutoComplete","styles","defaultValue","placeholder","cacheOptions","margin","helperId","Form","Inputs","uniqueId","rules","FormControl","fullWidth","InputLabel","htmlFor","Input","helperText","FormHelperText","noValidate","getContext","ListComponents","screen","Copyright","Date","getFullYear","marginTop","flexDirection","avatar","main","form","submit","SignIn","checkSession","handleSubmit","register","onSubmit","username","password","Container","component","maxWidth","Avatar","required","autoFocus","inputRef","FormControlLabel","Checkbox","mt","Routes","list","fullList","menuButton","breadcrumbs","marginLeft","titleSidebar","nested","paddingLeft","Children","history","setStateDrawer","ListItem","push","ListItemIcon","ListItemText","primary","GetParentChildren","GetRouteItems","setStateItems","parentsPrinted","find","printed","items","n","SideBar","useHistory","stateDrawer","stateItems","IconButton","edge","target","Drawer","anchor","Divider","List","grow","breakpoints","up","borderRadius","shape","fade","common","white","searchIcon","pointerEvents","justifyContent","inputRoot","inputInput","transition","transitions","create","sectionDesktop","sectionMobile","TopBar","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMobileMenuOpen","isMenuOpen","desktopMenuId","mobileMenuId","closeMobilMenu","closeDesktopMenu","renderDesktopMenuShown","ListMenu","slice","renderDesktopMenuHidden","Menu","anchorOrigin","vertical","horizontal","transformOrigin","renderMobilMenuHidden","Toolbar","noWrap","InputBase","input","inputProps","aria-controls","aria-haspopup","SwitchRoutes","getPath","path","Admin","SimpleDialog","msg","close","Dialog","onBackdropClick","aria-describedby","DialogContent","DialogContentText","createContext","session","AUTH","UserSession","localStorage","getItem","setSession","useMutation","loginUserMutation","openAlert","setOpenAlert","variables","String","setHeader","sessionLogin","setItem","removeItem"],"mappings":"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","file":"static/js/main.7ea96551.chunk.js","sourcesContent":["var map = {\n\t\"./core/routes/Default.route.tsx\": 159,\n\t\"./core/session/myAccount.route.tsx\": 160,\n\t\"./core/session/user.edit.route.tsx\": 178,\n\t\"./core/session/users.route.tsx\": 187,\n\t\"./crm/contacts.edit.route.tsx\": 180\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 158;","import { Route } from \"components/core/routes/Routes.many.rcontext\";\nimport AccountIcon from 'template-icons/AccountCircle';\nconst route: Route = {\n    name: '/',\n    parent: null,\n    sidebar: false,\n    Icon: AccountIcon,\n    Component: Default\n}\nexport default route\n\nfunction Default() {\n    return (\n        <div>My Default Page</div>\n    )\n}\n\n\n","import React from 'react'\nimport AccountIcon from 'template-icons/AccountCircleTwoTone';\nimport { Route } from 'components/core/routes/Routes.many.rcontext';\nimport { Tab } from \"../admin/Admin.Doc.Tabs\";\nimport { Doc } from \"../admin/Admin.Doc_\";\n\nconst getTabs = require.context(\n    'components',\n    true,\n    /myAccount\\.route\\.tab\\..+\\.(tsx|js)$/\n)\n\nconst Tabs = getTabs.keys().map(dir => {\n    return getTabs(dir).default as Tab\n})\n\n\nconst route: Route = {\n    name: 'MyAccount',\n    parent: 'System',\n    sidebar: true,\n    Icon: AccountIcon,\n    Component: MyAccount\n}\n\nexport default route\n\n\nfunction MyAccount() {\n    return <Doc\n        breadcrum={route}\n        tabs={Tabs}\n    />\n}\n\n","var map = {\n\t\"./core/session/myAccount.route.tab.main.tsx\": 167\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 166;","import React from 'react';\nimport { PropsTab, Tab } from \"components/core/admin/Admin.Doc.Tabs\"\nimport { useMutation, useQuery } from 'graphql-hooks'\nimport { FormProps, Form } from \"../form/form\";\nimport { useForm } from 'react-hook-form';\nimport util from \"util\";\nconst UPDATE_MY_USER = `#graphql\nmutation updateMyUser($user:UserUpdate){\n  userUpdateMyAccount(user:$user){\n    _id\n  }\n}\n`\nconst QUERY_MY_USER = `#graphql\nquery GetMyUser{\n  myUser:userGetMyUser{\n    name\n    lastname\n    email\n    phone    \n    groups\n    password\n  }\n}\n`\nconst Mutation = Symbol()\nfunction TabMain({ mutation }: PropsTab) {\n  const { control, getValues } = useForm<{}>()\n\n  mutation.set(Mutation,\n    () => {\n      //util.inspect for print object to string\n      const values = util.inspect(getValues()).replaceAll(\"'\", '\"')\n      return `#graphql\n      userUpdateMyAccount(user:${values}){\n        _id\n      }\n      `\n    }\n  )\n  const { loading, error, data } = useQuery(QUERY_MY_USER)\n  if (loading) return 'Loading...'\n  if (error) return 'Error:' + JSON.stringify(error)\n  if (!data?.myUser?.name)\n    return 'Its required to close your session first.'\n\n  const myUser_config: FormProps['config'] = {\n    name: {\n      type: 'string',\n    },\n    lastname: {\n      type: 'string'\n    },\n    email: {\n      alias: \"email(username)\",\n      type: 'email',\n    },\n    phone: {\n      type: 'number'\n    }\n  }\n  return <Form\n    data={data.myUser}\n    config={myUser_config}\n    control={control}\n  />\n\n}\n\nconst tab: Tab = {\n  title: '_Main',\n  Component: TabMain,\n}\nexport default tab","import React from \"react\";\nimport { Route } from \"components/core/routes/Routes.many.rcontext\";\nimport AccountIcon from 'template-icons/AccountCircle';\nimport { Tab } from \"../admin/Admin.Doc.Tabs\";\nimport { Doc } from \"../admin/Admin.Doc_\";\nimport { useParams } from \"react-router-dom\";\nconst route: Route = {\n    name: 'User',\n    parent: 'System',\n    paramaters: '/:_id',\n    sidebar: false,\n    Icon: AccountIcon,\n    Component: User\n}\nexport default route\n\nconst getTabs = require.context(\n    'components',\n    true,\n    /user\\.edit\\.route\\.tab\\..+\\.(tsx|js)$/\n)\n\nconst Tabs = getTabs.keys().map(dir => {\n    return getTabs(dir).default as Tab\n})\n\nfunction User() {\n    return <Doc\n        breadcrum={route}\n        tabs={Tabs}\n    />\n}\n\n\n\n","var map = {\n\t\"./core/session/user.edit.route.tab.main.tsx\": 188\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 179;","import React from \"react\";\nimport { Route } from \"components/core/routes/Routes.many.rcontext\";\nimport AccountIcon from 'template-icons/AccountCircle';\nimport { Tab } from \"../core/admin/Admin.Doc.Tabs\";\nimport { Doc } from \"../core/admin/Admin.Doc_\";\nimport { useParams } from \"react-router-dom\";\nconst route: Route = {\n    name: 'ContactEdit',\n    parent: 'CRM',\n    // paramaters: '/:_id',\n    sidebar: false,\n    Icon: AccountIcon,\n    Component: Contact\n}\nexport default route\n\nconst getTabs = require.context(\n    'components',\n    true,\n    /contacts\\.edit\\.route\\.tab\\..+\\.(tsx|js)$/\n)\n\nconst Tabs = getTabs.keys().map(dir => {\n    return getTabs(dir).default as Tab\n})\n\nfunction Contact() {\n    return <Doc\n        breadcrum={route}\n        tabs={Tabs}\n    />\n}\n\n\n\n","var map = {\n\t\"./crm/contacts.edit.route.tab.main.tsx\": 182\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 181;","import React from 'react';\nimport { useFieldArray, useForm } from 'react-hook-form';\nimport { PropsTab, Tab } from '../core/admin/Admin.Doc.Tabs';\nimport { TableEdit, TableProps } from \"../core/form/Table.Edit\";\nimport util from \"util\";\nimport { useQuery } from 'graphql-hooks';\nimport { useParams } from 'react-router-dom';\nimport { Form, FormProps } from '../core/form/form';\n\n\n\nconst Mutation = Symbol()\nfunction TabMain({ mutation }: PropsTab) {\n  const { control, getValues } = useForm<{}>()\n  let params: any = useParams();\n  const { loading, error, data } = useQuery(`#graphql\n {\n    user:userFind(operators:\"${params._id}\") {\n    _id\n    _id_company\n\n  }\n}\n  `)\n\n  mutation.set(Mutation,\n    () => {\n      //util.inspect for print object to string\n      const values = util.inspect(getValues()).replaceAll(\"'\", '\"')\n      return `#graphql\n      userUpdate(\n        user: ${values},\n        _id:\\\"${params._id}\\\"){\n        _id\n      }\n      `\n    }\n  )\n\n  const config: FormProps['config'] = {\n    name: {\n      alias: \"Name\",\n      type: 'string'\n    },\n    lastname: {\n      alias: \"LastName\",\n      type: 'string'\n    },\n    email:{\n      type:'email'\n    }\n  }\n  if (loading) return 'loading...'\n  else if (error) return 'Error:' + JSON.stringify(error)\n  else\n    return <Form\n      data={data.user[0]}\n      config={config}\n      control={control}\n    />\n}\n\n\n\n\nconst tab: Tab = {\n  title: '_Main',\n  Component: TabMain,\n}\nexport default tab","var map = {\n\t\"./core/session/Admin.TopBar.Menu.session.context.tsx\": 184\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 183;","import React from \"react\"\nimport AccountIcon from 'template-icons/AccountCircle';\nimport { TemplateContext } from '../admin/Admin.TopBar.Menu.many.rcontext'\nimport IconButton from 'template-core/IconButton';\nimport Badge from 'template-core/Badge';\nimport MenuItem from \"template-core/MenuItem\";\nimport Menu from 'template-core/Menu';\nimport { Session } from \"./User.Session\";\n\nfunction SessionMenu() {\n    const { closeSession } = React.useContext(Session)\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n\n    const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    return (\n        <div>\n            <IconButton aria-label=\"My Account\" onClick={handleClick} color=\"inherit\">\n                <AccountIcon />\n            </IconButton>\n            <Menu\n                id=\"myaccount-menu\"\n                anchorEl={anchorEl}\n                keepMounted\n                open={Boolean(anchorEl)}\n                onClose={handleClose}\n            >\n                <MenuItem onClick={handleClose}>My account</MenuItem>\n                <MenuItem onClick={() => {\n                    closeSession()\n                }}>Logout</MenuItem>\n            </Menu>\n        </div>\n    );\n}\n\nexport default TemplateContext({\n    desktopShown: <SessionMenu />,\n    desktopHidden: (closeMenu) => <MenuItem onClick={closeMenu}>Title User</MenuItem>,\n    mobil:\n        <MenuItem>\n            <IconButton aria-label=\"My Account\" color=\"inherit\">\n                <Badge badgeContent={4} color=\"secondary\">\n                    <AccountIcon />\n                </Badge>\n            </IconButton>\n            <p>My Account</p>\n        </MenuItem>,\n\n\n})\n// export default TemplateContext({\n//     title: 'User',\n//     ariaLabel: 'this can be better a Component',\n//     componentIcon: <AccountIcon />\n// })","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createMuiTheme } from 'template-core/styles';\nimport { red } from 'template-core/colors';\n\n\nexport const theme = createMuiTheme({\n  // palette: {\n  //   primary: {\n  //     main: '#556cd6',\n  //   },\n  //   secondary: {\n  //     main: '#19857b',\n  //   },\n  //   error: {\n  //     main: red.A400,\n  //   },\n  //   background: {\n  //     default: '#fff',\n  //   },\n  // },\n});\n","//CORE\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport CssBaseline from 'template-core/CssBaseline';\nimport { ThemeProvider } from 'template-core/styles';\nimport {\n  BrowserRouter,\n} from \"react-router-dom\";\nimport { theme } from './components/theme/theme';\nimport UserSession from \"./components/core/session/User.Session\";\nimport { GraphQLClient, ClientContext } from 'graphql-hooks'\n// import { GraphQLClient } from \"graphql-request\";\n\n\n// const client = new GraphQLClient('http://localhost:4009/graphql')\n// export const Client = React.createContext({\n//   client\n// })\nconst client = new GraphQLClient({\n  url: '/graphql'\n})\n\n\nReactDOM.render(\n  <React.StrictMode>\n     <BrowserRouter basename=\"/app\">\n      <ClientContext.Provider value={client}>\n        <ThemeProvider theme={theme}>\n          {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n          <CssBaseline />\n          <UserSession/>\n        </ThemeProvider>\n      </ClientContext.Provider>\n    </BrowserRouter>\n  </React.StrictMode >,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import React from \"react\"\nimport { makeStyles } from 'template-core/styles';\nimport Table from 'template-core/Table';\nimport TableBody from 'template-core/TableBody';\nimport TableCell from 'template-core/TableCell';\nimport TableContainer from 'template-core/TableContainer';\nimport TableHead from 'template-core/TableHead';\nimport TableRow from 'template-core/TableRow';\nimport OpenInNewIcon from 'template-icons/OpenInNew';\nimport { blue } from 'template-core/colors';\nimport Tooltip from 'template-core/Tooltip';\nimport { Link } from 'react-router-dom'\nimport { Button, Grid, TextField } from \"template-core\";\nimport { useForm } from \"react-hook-form\";\n\nconst useStyles = makeStyles({\n    table: {\n        // minWidth: 650,\n    },\n});\n\n\nexport type TableProps = {\n    config: {\n        [key: string]: {\n            alias?: string,\n            type: 'string' | 'number' | 'email' | 'password' | 'autocompletes',//html5\n            search?: boolean\n        }\n    },\n    data: any[]\n    open: {\n        url: string,//-->/System.User\n        parameters: string[]//-->_id\n    } // /route/:slug\n}\n\nexport function TableView(props: TableProps) {\n    const classes = useStyles();\n    const entries = Object.entries(props.config)\n    const { control, getValues } = useForm<{}>()\n    const onSearch = (e: any) => {\n        if (e.key === 'Enter') {\n            console.log('enter pressed');\n            //TODO run query for search\n        }\n    }\n    return (\n        <Grid\n            container\n            direction=\"row\"\n            justify=\"flex-end\"\n            alignItems=\"center\"\n            spacing={3}\n        >\n            <Grid item >\n                <TextField id=\"filled-basic\" label=\"Query\" />\n            </Grid>\n            <Grid item>\n                <Button variant=\"contained\" color=\"primary\">\n                    Search\n                </Button>\n            </Grid>\n            <TableContainer>\n                <Table className={classes.table} size=\"small\" aria-label=\"dense table\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell align=\"left\" key={0} />\n                            {entries.map(\n                                ([key, value], index) => (\n                                    <TableCell align=\"left\" key={index + 1}>\n                                        {value?.search === true\n                                            ? <TextField label={value?.alias ? value.alias : key} onKeyDown={onSearch} />\n                                            : value?.alias ? value.alias : key\n                                        }\n\n                                    </TableCell>\n                                )\n                            )}\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {\n                            props.data.map(\n                                (row, indexRow) => {\n                                    return (\n                                        <TableRow key={indexRow}>\n                                            <TableCell align=\"left\" key={indexRow}>\n                                                <Tooltip title=\"Open\">\n                                                    {/* <IconButton color=\"inherit\" aria-label=\"Delete\" */}\n                                                    <Link to={props.open.url + `/${props.open.parameters.map(\n                                                        nameParameter => {\n                                                            return row[nameParameter]\n                                                        }\n                                                    ).join('/')\n                                                        }`}\n                                                    >\n                                                        <OpenInNewIcon style={{ color: blue[300] }} />\n                                                    </Link>\n                                                </Tooltip>\n                                            </TableCell>\n                                            {entries.map(\n                                                ([nameField, configField], index) => {\n                                                    return (\n                                                        <TableCell align=\"left\" key={index} >\n                                                            {row[nameField]}\n                                                        </TableCell>\n                                                    )\n                                                }\n                                            )}\n                                        </TableRow>\n                                    )\n                                }\n\n                            )\n                        }\n                    </TableBody>\n                </Table>\n            </TableContainer>\n            <Grid item >\n                Prev\n            </Grid>\n            <Grid item >\n                Next\n            </Grid>\n        </Grid>\n    )\n}","import React from 'react'\nimport Grid from \"template-core/Grid\";\nimport Breadcrumbs from \"template-core/Breadcrumbs\";\nimport Link from \"template-core/Link\";\nimport Typography from 'template-core/Typography';\nimport { makeStyles, createStyles, Theme } from 'template-core/styles';\nimport { TableView, TableProps } from \"../form/Table.View\";\nimport Paper from 'template-core/Paper';\nimport { FormControl, FormHelperText, Input, InputLabel } from 'template-core';\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        paper: {\n            padding: theme.spacing(1),\n            textAlign: 'left',\n            color: theme.palette.text.secondary,\n        },\n        link: {\n            display: 'flex',\n        },\n        icon: {\n            marginRight: theme.spacing(0.5),\n            width: 20,\n            height: 20,\n        },\n    }),\n);\nexport type Props = {\n    parent: string | null,\n    Icon: Function,\n    name: string\n    table: TableProps\n}\nexport function Dashboard(props: Props) {\n    const [query, setQuery] = React.useState()\n\n    const classes = useStyles();\n    return <Paper className={classes.paper}>\n        <Grid container >\n            <Grid item xs={12}>\n                <Breadcrumbs aria-label=\"breadcrumb\">\n                    {props?.parent !== null ?\n                        <Link color=\"inherit\" href=\"#\" className={classes.link}>\n                            {props.parent}\n                        </Link>\n                        : <Link color=\"inherit\" href=\"#\" className={classes.link}>\n                            /\n        </Link>\n                    }\n                    <Typography color=\"textPrimary\" className={classes.link}>\n                        <props.Icon className={classes.icon} />\n                        {props.name}\n                    </Typography>\n                </Breadcrumbs>\n            </Grid>\n            <Grid item xs={12}>\n                <TableView config={props.table.config} data={props.table.data} open={props.table.open} />\n            </Grid>\n        </Grid>\n    </Paper>\n}","import React from \"react\";\nimport { Route } from \"components/core/routes/Routes.many.rcontext\";\nimport AccountIcon from 'template-icons/AccountCircle';\nimport { useQuery } from \"graphql-hooks\";\nimport { Dashboard, Props } from \"../admin/Admin.Dashboard\";\nimport PeopleIcon from 'template-icons/People';\nconst route: Route = {\n    name: 'Users',\n    parent: 'System',\n    sidebar: true,\n    Icon: AccountIcon,\n    Component: Users\n}\nexport default route\n\n\nconst QUERY = `#graphql\nquery Users{\n    users:userFind {\n      _id\n      name\n      lastname\n      email\n      phone\n      groups      \n    }\n  }`\n\n\nfunction Users() {\n    const { loading, error, data } = useQuery(QUERY)\n    if (loading) return 'Loading...'\n    if (error) return 'Error:' + JSON.stringify(error)\n\n    const props: Props = {\n        Icon: route.Icon,\n        name: route.name,\n        parent: route.parent,\n        table: {\n            config: {\n                _id: {\n                    type: 'string',\n                    search:true\n                },\n                name: {\n                    type: \"string\",\n                    search:true\n                },\n                lastname: {\n                    type: \"string\",\n                    search:true\n                },\n                email: {\n                    type: \"email\",\n                    search:true\n                },\n                phone: {\n                    type: \"number\",\n                    search:true\n                },\n                groups: {\n                    type: \"number\"\n                }\n            },\n            data: data.users,\n            open: { url: \"/System.User\", parameters: ['_id'] }\n\n        }\n    }\n    return <Dashboard {...props} />\n}\n\n\n\n","import React from 'react';\nimport {  useForm } from 'react-hook-form';\nimport { PropsTab, Tab } from '../admin/Admin.Doc.Tabs';\n\nimport { useQuery } from 'graphql-hooks';\nimport { useParams } from 'react-router-dom';\nimport { Form, FormProps } from '../form/form';\nimport { objectString } from '../form/utils';\n\n\n\n\nconst Mutation = Symbol()\nfunction TabMain({ mutation }: PropsTab) {\n  const { control, getValues } = useForm<{}>()\n  let params: any = useParams();\n  const { loading, error, data } = useQuery(`#graphql\n {\n    user:userFind(operators:\"${params._id}\") {\n    _id\n    name\n    lastname\n    email\n    phone\n    groups(selectFormat:true)\n  }\n  groups:groupList(selectFormat:true)\n}\n  `)\n\n  mutation.set(Mutation,\n    () => {\n      const values = getValues()\n      //@ts-ignore\n      values.groups = values.groups.map(\n        (data: { label: string, value: string }) => data.value\n      )\n      const objString = objectString(getValues())\n      return `#graphql\n      userUpdate(\n        user: ${objString},\n        _id:\\\"${params._id}\\\"){\n        _id\n      }\n      `\n    }\n  )\n\n\n  if (loading) return 'loading...'\n  else if (error) return JSON.stringify(error)\n  else if (!data?.user[0])\n    return `User not found`\n\n  const config: FormProps['config'] = {\n    name: {\n      alias: \"Name\",\n      type: 'string'\n    },\n    lastname: {\n      alias: \"LastName\",\n      type: 'string'\n    },\n    email: {\n      type: 'email'\n    },\n    groups: {\n      type: \"autocomplete\",\n      autoComplete: {\n        isMulti: true,\n        loadOptions: async (inputValue) => data.groups.filter(\n          (group: { value: string, label: string }) => group.label.toLowerCase()\n            .includes(inputValue.toLowerCase())\n        )\n      }\n    }\n  }\n\n  return <Form\n    data={data.user[0]}\n    config={config}\n    control={control}\n  />\n}\n\n\n\n\nconst tab: Tab = {\n  title: '_Main',\n  Component: TabMain,\n}\nexport default tab","import util from \"util\";\n\nexport function setValuesFromSelect(array: { label: any, value: any }[]) {\n    array.map(data => data.value)\n}\n\n\nexport function objectString(o:object){\n   return  util.inspect(o).replaceAll(\"'\", '\"')\n}","import React from 'react';\nimport { makeStyles, createStyles, Theme } from 'template-core/styles';\nimport Paper from 'template-core/Paper';\nimport Grid from 'template-core/Grid';\nimport Box from 'template-core/Box';\nimport Breadcrumbs from 'template-core/Breadcrumbs';\nimport Link from 'template-core/Link';\nimport Typography from 'template-core/Typography';\nimport Button from 'template-core/Button';\nimport Workflow from \"./Admin.Doc.Workflow\";\nimport { ClientContext } from \"graphql-hooks\";\nimport { useLocation } from 'react-router-dom';\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            flexGrow: 1,\n        },\n        paper: {\n            padding: theme.spacing(1),\n            textAlign: 'left',\n            color: theme.palette.text.secondary,\n        },\n        link: {\n            display: 'flex',\n        },\n        icon: {\n            marginRight: theme.spacing(0.5),\n            width: 20,\n            height: 20,\n        },\n        button: {\n            marginRight: theme.spacing(0.5)\n        }\n    }),\n);\n\nexport type Props = {\n    breadcrum: {\n        name: string,\n        parent: null | string,\n        Icon: Function\n    },\n    gql: {\n        mutation: Map<Symbol, () => string>,\n    }\n}\n\n\nexport function DocSave({ breadcrum, gql }: Props) {\n    const classes = useStyles();\n    const client = React.useContext(ClientContext)\n    const p = useLocation().pathname.split('/')\n    const location = (p[0] + '_' + p[1]).replace('.', '_')\n    const saveDocOnClick = async () => {\n        let query = Array.from(gql.mutation.values()).map(\n            values => values()\n        ).join(' ')\n        query = `mutation ${location}{ ${query} }`\n        console.log({ query })\n        const response = await client.request({\n            query\n        })\n    }\n\n    return (\n        <>\n            <Box m={1}>\n                <Breadcrumbs aria-label=\"breadcrumb\">\n                    {breadcrum?.parent !== null ?\n                        <Link color=\"inherit\" href=\"#\" className={classes.link}>\n                            {breadcrum.parent}\n                        </Link>\n                        : <Link color=\"inherit\" href=\"#\" className={classes.link}>\n                            /\n            </Link>\n                    }\n                    <Typography color=\"textPrimary\" className={classes.link}>\n                        <breadcrum.Icon className={classes.icon} />\n                        {breadcrum.name}\n                    </Typography>\n                </Breadcrumbs>\n            </Box>\n            < Box m={1} >\n                <Button\n                    onClick={saveDocOnClick}\n                    variant=\"outlined\" color=\"primary\" className={classes.button}\n                >\n                    Save\n                    </Button>\n                <Button color=\"secondary\" className={classes.button}>\n                    Discard\n                    </Button>\n            </Box >\n        </>\n    )\n}\n","import React from 'react';\nimport { makeStyles, Theme } from 'template-core/styles';\nimport AppBar from 'template-core/AppBar';\nimport Tabs from 'template-core/Tabs';\nimport Tab from 'template-core/Tab';\nimport Typography from 'template-core/Typography';\nimport Box from 'template-core/Box';\nimport type { Props as PropsHeader } from \"./Admin.Doc.Header.Save\";\n\n\ninterface TabPanelProps {\n    children?: React.ReactNode;\n    index: any;\n    value: any;\n}\n\nfunction TabPanel(props: TabPanelProps) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`scrollable-auto-tabpanel-${index}`}\n            aria-labelledby={`scrollable-auto-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box p={3}>\n                    <Typography>{children}</Typography>\n                </Box>\n            )}\n        </div>\n    );\n}\n\nfunction a11yProps(index: any) {\n    return {\n        id: `scrollable-auto-tab-${index}`,\n        'aria-controls': `scrollable-auto-tabpanel-${index}`,\n    };\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n    root: {\n        flexGrow: 1,\n        width: '100%',\n        backgroundColor: theme.palette.background.paper,\n    },\n}));\nexport type PropsTab = {\n    mutation: PropsHeader['gql']['mutation']\n}\nexport type Tab = {\n    title: string,\n    Component: Function\n}\n\n\nexport default function DocTabs(props: { tabs: Tab[], mutation: PropsTab['mutation'] }) {\n    const classes = useStyles();\n    const [activeTab, setActiveTab] = React.useState(0);\n\n    const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\n        setActiveTab(newValue);\n    };\n\n    const TabsLabel = props.tabs.sort(\n        (a, b) => {\n            if (a.title > b.title)\n                return 1\n            else if (a.title === b.title)\n                return 0\n            else\n                return -1\n        }\n    ).map(\n        (tab, index) => {\n            return (\n                <Tab label={tab.title} {...a11yProps(index)} key={index}/>\n            )\n        }\n    )\n    const TabsContent = props.tabs.map(\n        (tab, index) => {\n            return (\n                <TabPanel value={activeTab} index={index} key={index}>\n                    <tab.Component mutation={props.mutation} key={index} />\n                </TabPanel>\n            )\n        }\n    )\n\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\" color=\"default\">\n                <Tabs\n                    value={activeTab}\n                    onChange={handleChange}\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                    variant=\"scrollable\"\n                    scrollButtons=\"auto\"\n                    aria-label=\"scrollable auto tabs example\"\n                >\n                    {TabsLabel}\n                </Tabs>\n            </AppBar>\n            {TabsContent}\n        </div>\n    );\n}\n","import React from 'react'\nimport { Props as HeaderProps, DocSave } from \"./Admin.Doc.Header.Save\";\nimport DocTabs, { Tab } from \"./Admin.Doc.Tabs\";\nimport { makeStyles, createStyles, Theme } from 'template-core/styles';\nimport Paper from 'template-core/Paper';\nimport Grid from 'template-core/Grid';\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            flexGrow: 1,\n        },\n        paper: {\n            padding: theme.spacing(1),\n            textAlign: 'left',\n            color: theme.palette.text.secondary,\n        },\n        link: {\n            display: 'flex',\n        },\n        icon: {\n            marginRight: theme.spacing(0.5),\n            width: 20,\n            height: 20,\n        },\n        button: {\n            marginRight: theme.spacing(0.5)\n        }\n    }),\n);\ninterface Props {\n    breadcrum: HeaderProps['breadcrum'],\n    tabs: Tab[],\n}\n\nexport function Doc(props: Props) {\n    const classes = useStyles();\n    //mutation is together, queries is for each tab,\n    //mutation params with reac-router-dom useParams() for get the id \n    const mutation: HeaderProps['gql']['mutation'] = new Map()\n    return (\n        <>\n            <div className={classes.root}>\n                <Grid container >\n                    <Grid item xs={12}>\n                        <Paper className={classes.paper}>\n                            <Grid container >\n                                <Grid item xs={2} >\n                                    <DocSave\n                                        breadcrum={props.breadcrum}\n                                        gql={{\n                                            mutation\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={10}>\n                                    TODO, require.context other actions like email\n                                </Grid>\n                            </Grid>\n                        </Paper>\n                    </Grid>\n                </Grid>\n            </div>\n            <DocTabs tabs={props.tabs} mutation={mutation} />\n        </>\n    )\n}","import React, { useState } from \"react\";\nimport Select from 'react-select/async';\nconst customStyles = {\n    // option: (provided: any, state: any) => ({\n    //     ...provided,\n    //     borderBottom: '1px dotted pink',\n    //     color: state.isSelected ? 'red' : 'blue',\n    //     padding: 20,\n    // }),\n    // control: () => ({\n    //     // none of react-select's styles are passed to <Control />\n    //     // width: 200,\n    // }),\n    // singleValue: (provided: any, state: any) => {\n    //     const opacity = state.isDisabled ? 0.5 : 1;\n    //     const transition = 'opacity 300ms';\n\n    //     return { ...provided, opacity, transition };\n    // }\n}\nconst options = [\n    { value: 'chocolate', label: 'Chocolate' },\n    { value: 'strawberry', label: 'Strawberry' },\n    { value: 'vanilla', label: 'Vanilla' },\n];\nconst promiseOptions = (inputValue: any) =>\n    new Promise(resolve => {\n        setTimeout(() => {\n            resolve(options);\n        }, 1000);\n    })\n\nexport type AutoCompleteProps = {\n    name: string, //generate an HTML input with this name, containing the current value\n    placeholder: string,\n    isMulti: boolean,\n    loadOptions: (inputValue: any) => any\n    onChange: any//subscribe to change events\n    defaultValue: any\n}\nexport function AutoComplete(props: AutoCompleteProps) {\n    // const [selectedOption, setSelectedOption] = useState({ value: 'chocolate', label: 'Chocolate' });\n\n    return (\n        <Select\n            styles={customStyles}\n            // defaultValue={[{value:'hi',label:\"Hi\"},{value:'hi',label:\"Hi2\"}]}\n            defaultValue={props.defaultValue}\n            onChange={props.onChange}\n            placeholder={props.placeholder}\n            name={props.name}\n            isMulti={props.isMulti}\n            cacheOptions\n            loadOptions={props.loadOptions}\n        // loadOptions={\n        //     inputValue =>\n        //         new Promise(resolve => {\n        //             setTimeout(() => {\n        //                 resolve([{ value: \"ho\", label: \"he\" }]);\n        //             }, 0);\n        //         })\n        // }\n        />\n    );\n}","import FormControl from 'template-core/FormControl';\nimport FormHelperText from 'template-core/FormHelperText';\nimport Input from 'template-core/Input';\nimport InputLabel from 'template-core/InputLabel';\nimport { createStyles, makeStyles, Theme } from 'template-core/styles';\nimport { Controller, UseControllerOptions, UseFormMethods } from 'react-hook-form';\nimport { AutoComplete, AutoCompleteProps } from \"./form.autocomple\";\ntype FormConfig = {\n    alias?: string //other name for the data\n    type: 'string' | 'number' | 'email' | 'password' | 'autocomplete'//html5\n    autoComplete?: Omit<AutoCompleteProps, \"name\" | \"onChange\" | \"placeholder\" | \"defaultValue\">,\n    helperText?: string,\n    rules?: UseControllerOptions<any>['rules'],\n    fullWidth?: boolean\n}\nexport type FormProps = {\n    // id: string\n    data: {\n        [key: string]: any\n    },\n    config: {\n        [key: string]: FormConfig\n    },\n    control: UseFormMethods['control']\n\n}\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            '& .MuiFormControl-root': {\n                margin: theme.spacing(1),\n                width: '25ch',\n            },\n        },\n    }),\n);\nlet helperId = 0\nexport function Form(props: FormProps) {\n    const classes = useStyles()\n    const Inputs = Object.entries(props.config).map(\n        ([key, config]) => {\n            const uniqueId = 'form_vidalii_' + (helperId++)\n            return (\n\n                <Controller\n                    key={key}\n                    name={key}\n                    control={props.control}\n                    defaultValue={props.data[key]}\n                    rules={config?.rules ? config.rules : {}}\n                    render={({ onChange, value }) => {\n                        if (config.type === 'autocomplete')\n                            return (\n                                <FormControl fullWidth={config?.fullWidth ? true : false}>\n                                    <AutoComplete\n                                        //@ts-ignore\n                                        isMulti={config.autoComplete.isMulti}\n                                        //@ts-ignore\n                                        loadOptions={config.autoComplete.loadOptions}\n                                        name={uniqueId}\n                                        onChange={onChange}\n                                        placeholder={config?.alias ? config.alias : key}\n                                        defaultValue={value}\n                                        // defaultValue={[{value:'hi',label:\"Hi\"},{value:'hi',label:\"Hi2\"}]}\n                                    />\n                                </FormControl>\n                            )\n                        else\n                            return (\n                                <FormControl fullWidth={config?.fullWidth ? true : false}>\n                                    <InputLabel htmlFor={uniqueId}>{config?.alias ? config.alias : key}</InputLabel>\n                                    <Input\n                                        type={config.type}\n                                        id={uniqueId}\n                                        value={value}\n                                        onChange={onChange}\n                                        name={key}\n                                    />\n                                    {config?.helperText && (\n                                        <FormHelperText>{config.helperText}</FormHelperText>\n                                    )}\n                                </FormControl>\n                            )\n                    }\n\n                    }\n                />\n\n            )\n        }\n    )\n    return (\n        <form\n            className={classes.root}\n            noValidate\n            autoComplete=\"off\"\n        >\n            {Inputs}\n        </form>\n    )\n}","import React from \"react\"\nimport MailIcon from 'template-icons/Mail';\nimport IconButton from 'template-core/IconButton';\nimport Badge from 'template-core/Badge';\nimport MenuItem from \"template-core/MenuItem\";\n\nexport type PropsComponentsCustom = {\n    screen: 'desktop' | 'mobil',\n    display: 'shown' | 'hidden',\n    closeMenu: () => void,\n}\nconst getContext = require.context(\n    'components',\n    true,\n    /Admin\\.TopBar\\.Menu\\..+\\.context\\.(tsx|js)$/\n)\nexport const ListComponents = getContext.keys().map(dir => {\n    //TODO ordered position here\n    return getContext(dir).default as React.FunctionComponent<PropsComponentsCustom>\n})\ninterface TopBarMenuProps {\n    desktopShown: JSX.Element,\n    desktopHidden: (close: () => void) => JSX.Element,\n    mobil: JSX.Element\n}\n\nexport function TemplateContext(\n    props: TopBarMenuProps\n    // { title, ariaLabel, componentIcon }: {\n    //     title: string,\n    //     ariaLabel: string,\n    //     componentIcon: JSX.Element\n    // }\n) {\n    return function ({ display, screen, closeMenu }: PropsComponentsCustom) {\n        if (screen === 'desktop' && display === 'shown')\n            return props.desktopShown\n        // return (\n        //     <IconButton aria-label={ariaLabel} color=\"inherit\">\n        //         <Badge badgeContent={4} color=\"secondary\">\n        //             {componentIcon}\n        //         </Badge>\n        //     </IconButton>\n        // )\n        if (screen === 'desktop' && display === 'hidden')\n            return props.desktopHidden(closeMenu)\n        // return <MenuItem onClick={closeMenu}>{title}</MenuItem>\n\n        if (screen === 'mobil')\n            return props.mobil\n        // return (\n        //     <MenuItem>\n        //         <IconButton aria-label={ariaLabel} color=\"inherit\">\n        //             <Badge badgeContent={4} color=\"secondary\">\n        //                 {componentIcon}\n        //             </Badge>\n        //         </IconButton>\n        //         <p>{title}</p>\n        //     </MenuItem>\n        // )\n    }\n}","import React, { useContext } from 'react';\nimport Avatar from 'template-core/Avatar';\nimport Button from 'template-core/Button';\nimport CssBaseline from 'template-core/CssBaseline';\nimport TextField from 'template-core/TextField';\nimport FormControlLabel from 'template-core/FormControlLabel';\nimport Checkbox from 'template-core/Checkbox';\nimport Link from 'template-core/Link';\nimport Grid from 'template-core/Grid';\nimport Box from 'template-core/Box';\nimport LockOutlinedIcon from 'template-icons/LockOutlined';\nimport Typography from 'template-core/Typography';\nimport { makeStyles } from 'template-core/styles';\nimport Container from 'template-core/Container';\nimport { useForm } from 'react-hook-form';\n\n\n//context\n// import { SessionContext } from '../../Session/User.Session'\n// import { SessionContext } from '../core/Session/User.Session'\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Your Website\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\n\ninterface FormData {\n  username: string;\n  password: string;\n}\n\nexport default function SignIn(props:{checkSession:(username: string, password: string) => Promise<void>}) {\n  const checkSession = props.checkSession as (username: string, password: string) => Promise<void>\n  const { handleSubmit, register } = useForm<FormData>();\n\n  const onSubmit = handleSubmit(\n    async ({ username, password }) => {\n      await checkSession(username, password)\n    });\n  const classes = useStyles()\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form className={classes.form} onSubmit={onSubmit}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"username\"\n            label=\"username\"\n            name=\"username\"\n            autoComplete=\"username\"\n            autoFocus\n            inputRef={register}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            inputRef={register}\n          />\n          <FormControlLabel\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\n            label=\"Remember me\"\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Sign In\n          </Button>\n          <Grid container>\n            <Grid item xs>\n              <Link href=\"#\" variant=\"body2\">\n                Forgot password?\n              </Link>\n            </Grid>\n            <Grid item>\n              <Link href=\"#\" variant=\"body2\">\n                {\"Don't have an account? Sign Up\"}\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={8}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}","\nexport type Route = {\n    name: string,\n    parent: string | null\n    paramaters?: string, // /:parameter1/:parameter2\n    sidebar?: boolean,\n    Icon: React.FunctionComponent,\n    Component: React.FunctionComponent | Function\n}\n\nconst getContext = require.context(\n    'components',\n    true,\n    /.+\\.route\\.(tsx|js)$/\n)\n\nexport const Routes = getContext.keys().map(dir => {\n    return getContext(dir).default as Route //as React.FunctionComponent<Props>\n})","import React from 'react';\nimport { makeStyles, createStyles, Theme, } from 'template-core/styles';\nimport Drawer from 'template-core/Drawer';\nimport List from 'template-core/List';\nimport Divider from 'template-core/Divider';\nimport ListItem from 'template-core/ListItem';\nimport ListItemIcon from 'template-core/ListItemIcon';\nimport ListItemText from 'template-core/ListItemText';\nimport MenuIcon from 'template-icons/Menu';\nimport IconButton from 'template-core/IconButton';\nimport { Routes, Route } from '../routes/Routes.many.rcontext'\nimport Breadcrumbs from 'template-core/Breadcrumbs';\nimport Link from 'template-core/Link';\nimport Typography from 'template-core/Typography';\nimport ExpandMore from 'template-icons/ExpandMoreTwoTone';\nimport {\n  useHistory\n} from \"react-router-dom\";\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n  list: {\n    width: 300,\n  },\n  fullList: {\n    width: 'auto',\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  breadcrumbs: {\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n  },\n  titleSidebar: {\n    textAlign: 'center'\n  },\n  nested: {\n    paddingLeft: theme.spacing(4),\n  }\n}))\n\n\nconst Children = (value: Route, index: number, history: any, setStateDrawer: any) => {\n  const to = (value?.parent || '') + '.' + value.name\n  return (\n    < ListItem button key={index} onClick={() => {\n      setStateDrawer(false)\n      history.push('/'+to);\n    }}>\n      <ListItemIcon><value.Icon /></ListItemIcon>\n      <ListItemText primary={value.name} />\n    </ListItem>\n  )\n}\nconst GetParentChildren = (parent: string, history: any, setStateDrawer: any) => {\n  return Routes.filter(value => value.sidebar === true).filter(value => value.parent === parent).map(\n    (value, index) => Children(value, index, history, setStateDrawer)\n  )\n}\nconst GetRouteItems = (Routes: Route[], setStateItems: () => (a: Items) => void, history: any, setStateDrawer: any) => {\n  const parentsPrinted: string[] = []\n  return Routes.filter(value => value.sidebar === true)\n    .sort(\n      (a, b) => {\n        if (a.name > b.name)\n          return 1\n        else if (a.name === b.name)\n          return 0\n        else\n          return -1\n      }\n    ).map(\n      (value, index) => {\n        if (value.parent === null)\n          return Children(value, index, history, setStateDrawer)\n        else {\n          //is Parent\n          const found = parentsPrinted.find(printed => printed === value.parent)\n          if (!found) {\n            parentsPrinted.push(value.parent)\n            return (\n              < ListItem button key={index} onClick={\n                () => {\n                  setStateItems()({\n                    breadcrum: `${value.parent}`,\n                    items: GetParentChildren(value.parent as string, history, setStateDrawer)\n                  })\n                }\n              }>\n                <ListItemIcon><ExpandMore /></ListItemIcon>\n                <ListItemText primary={value.parent} />\n              </ListItem>\n            )\n          }\n          else\n            return null //is parent duplicated\n        }\n      }\n    ).filter(n => n) //remove null\n}\n\ntype Items = {\n  breadcrum: string,\n  items: JSX.Element[]\n}\nexport default function SideBar() {\n  let history = useHistory();\n  const classes = useStyles();\n  const [stateDrawer, setStateDrawer] = React.useState(false);\n\n  //@ts-ignore\n  const [stateItems, setStateItems] = React.useState<Items>({\n    breadcrum: '',\n    //@ts-ignore\n    items: GetRouteItems(Routes, () => setStateItems, history, setStateDrawer)\n  })\n  const toggleDrawer = (\n    event: any\n  ) => {\n    if (stateDrawer === false)\n      setStateDrawer(true)\n    else if (event.target.className === \"MuiBackdrop-root\")\n      setStateDrawer(!stateDrawer)\n  }\n\n\n  return (\n    <>\n      <IconButton\n        edge=\"start\"\n        className={classes.menuButton}\n        color=\"inherit\"\n        aria-label=\"open drawer\"\n        onClick={toggleDrawer}\n      >\n        <Drawer anchor='left' open={stateDrawer}>\n          <div\n            role=\"presentation\"\n          >\n            <h1 className={classes.titleSidebar}>Vidalii ERP</h1>\n            <Breadcrumbs aria-label=\"breadcrumb\" className={classes.breadcrumbs}>\n              <Link color=\"inherit\" href=\"#\" onClick={\n                () => {\n                  setStateItems({\n                    breadcrum: '',\n                    items: GetRouteItems(Routes, () => setStateItems, history, setStateDrawer)\n                  })\n                }\n              }>\n                / Main\n              </Link>\n              {stateItems.breadcrum !== '' &&\n                <Link color=\"inherit\" href=\"#\" >\n                  <Typography color=\"textPrimary\">{stateItems.breadcrum}</Typography>\n                </Link>\n              }\n\n\n            </Breadcrumbs>\n            <Divider />\n            <List className={classes.list}>\n              {stateItems.items}\n            </List>\n          </div >\n\n        </Drawer>\n        <MenuIcon />\n      </IconButton>\n\n    </>\n  )\n}\n","import React from 'react';\nimport { fade, makeStyles, Theme, createStyles } from 'template-core/styles';\nimport AppBar from 'template-core/AppBar';\nimport Toolbar from 'template-core/Toolbar';\nimport IconButton from 'template-core/IconButton';\nimport Typography from 'template-core/Typography';\nimport InputBase from 'template-core/InputBase';\nimport SearchIcon from 'template-icons/Search';\nimport MoreIcon from 'template-icons/MoreVert';\nimport Menu from 'template-core/Menu';\nimport LeftDrawer from \"./Admin.TopBar.Sidebar\";\n//Components array of Menu right\nimport { ListComponents as ListMenu } from './Admin.TopBar.Menu.many.rcontext'\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        grow: {\n            flexGrow: 1,\n        },\n        menuButton: {\n            marginRight: theme.spacing(2),\n        },\n        title: {\n            display: 'none',\n            [theme.breakpoints.up('sm')]: {\n                display: 'block',\n            },\n        },\n        search: {\n            position: 'relative',\n            borderRadius: theme.shape.borderRadius,\n            backgroundColor: fade(theme.palette.common.white, 0.15),\n            '&:hover': {\n                backgroundColor: fade(theme.palette.common.white, 0.25),\n            },\n            marginRight: theme.spacing(2),\n            marginLeft: 0,\n            width: '100%',\n            [theme.breakpoints.up('sm')]: {\n                marginLeft: theme.spacing(3),\n                width: 'auto',\n            },\n        },\n        searchIcon: {\n            padding: theme.spacing(0, 2),\n            height: '100%',\n            position: 'absolute',\n            pointerEvents: 'none',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n        },\n        inputRoot: {\n            color: 'inherit',\n        },\n        inputInput: {\n            padding: theme.spacing(1, 1, 1, 0),\n            // vertical padding + font size from searchIcon\n            paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n            transition: theme.transitions.create('width'),\n            width: '100%',\n            [theme.breakpoints.up('md')]: {\n                width: '20ch',\n            },\n        },\n        sectionDesktop: {\n            display: 'none',\n            [theme.breakpoints.up('md')]: {\n                display: 'flex',\n            },\n        },\n        sectionMobile: {\n            display: 'flex',\n            [theme.breakpoints.up('md')]: {\n                display: 'none',\n            },\n        },\n    }),\n);\n\nexport default function TopBar() {\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null)\n    const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState<null | HTMLElement>(null);\n    const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n    const isMenuOpen = Boolean(anchorEl);\n    const desktopMenuId = 'primary-search-account-menu';\n    const mobileMenuId = 'primary-search-account-menu-mobile';\n\n    const closeMobilMenu = () => {\n        setMobileMoreAnchorEl(null);\n    };\n    const closeDesktopMenu = () => {\n        setAnchorEl(null);\n        closeMobilMenu();\n    };\n\n    const openDesktopMenu = (event: React.MouseEvent<HTMLElement>) => {\n        setAnchorEl(event.currentTarget);\n    }\n    const openMobilMenu = (event: React.MouseEvent<HTMLElement>) => {\n        setMobileMoreAnchorEl(event.currentTarget);\n    };\n    // console.log('ComponentsDynamic:', ComponentsDynamic)\n    const renderDesktopMenuShown =\n        //list.menu.slice(0, 3)\n        // menuItems.slice(0, 3)\n        ListMenu.slice(0, 3)\n            .map(\n                (Component, index) => {\n                    return <Component display='shown' screen='desktop' closeMenu={closeDesktopMenu} key={index} />\n                }\n            )\n\n    const renderDesktopMenuHidden = (\n        <Menu\n            anchorEl={anchorEl}\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n            id={desktopMenuId}\n            keepMounted\n            transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n            open={isMenuOpen}\n            onClose={closeDesktopMenu}\n        >\n            {\n                ListMenu.slice(3).map(\n                    (Component,index) => {\n                        return <Component display='hidden' screen='desktop' closeMenu={closeDesktopMenu} key={index} />\n                    }\n                )\n            }\n        </Menu>\n    )\n\n    const renderMobilMenuHidden = (\n        <Menu\n            anchorEl={mobileMoreAnchorEl}\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n            id={mobileMenuId}\n            keepMounted\n            transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n            open={isMobileMenuOpen}\n            onClose={closeMobilMenu}\n        >\n            {ListMenu.map(\n                (Component,index) => <Component display='hidden' screen='mobil' closeMenu={closeMobilMenu} key={index} />\n            )}\n        </Menu>\n    );\n\n    // const [state, setState] = React.useState(false)\n    return (\n        <div className={classes.grow}>\n            <AppBar position=\"static\">\n                <Toolbar variant=\"dense\">\n                    {/* <IconButton\n                        edge=\"start\"\n                        className={classes.menuButton}\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                    >\n                        <MenuIcon />\n                    </IconButton> */}\n                    <LeftDrawer />\n                    <Typography className={classes.title} variant=\"h6\" noWrap>\n                        Vidalii ERP\n          </Typography>\n                    <div className={classes.search}>\n                        <div className={classes.searchIcon}>\n                            <SearchIcon />\n                        </div>\n                        <InputBase\n                            placeholder=\"Search…\"\n                            classes={{\n                                root: classes.inputRoot,\n                                input: classes.inputInput,\n                            }}\n                            inputProps={{ 'aria-label': 'search' }}\n                        />\n                    </div>\n                    <div className={classes.grow} />\n                    <div className={classes.sectionDesktop}>\n                        {renderDesktopMenuShown}\n                        <IconButton\n                            aria-label=\"show more\"\n                            aria-controls={desktopMenuId}\n                            aria-haspopup=\"true\"\n                            onClick={openDesktopMenu}\n                            color=\"inherit\"\n                        >\n                            <MoreIcon />\n                        </IconButton>\n                    </div>\n                    <div className={classes.sectionMobile}>\n                        <IconButton\n                            aria-label=\"show more\"\n                            aria-controls={mobileMenuId}\n                            aria-haspopup=\"true\"\n                            onClick={openMobilMenu}\n                            color=\"inherit\"\n                        >\n                            <MoreIcon />\n                        </IconButton>\n                    </div>\n                </Toolbar>\n            </AppBar>\n            {renderDesktopMenuHidden}\n            {renderMobilMenuHidden}\n        </div>\n    );\n}\n","import {\n    Switch, Route\n} from \"react-router-dom\";\nimport { Routes } from \"../routes/Routes.many.rcontext\";\n\n\n\nexport default function SwitchRoutes() {\n    const getPath = (name: string, parent: string | null, parameters: string | undefined) => {\n        let url = parent === null\n            ? '/' + name\n            : '/' + parent + '.' + name\n        if (parameters)\n            url = url + parameters\n        return url\n    }\n    return (\n        <Switch>\n            { Routes.map(\n                ({ Component, name, parent, paramaters }, index) => {\n                    return (\n                        <Route\n                            key={index}\n                            path={getPath(name, parent, paramaters)}\n                            component={Component as any}\n                        />\n                    )\n                }\n            )}\n        </Switch>\n    )\n}","import React from 'react';\nimport { makeStyles, Theme, createStyles } from 'template-core/styles';\nimport TopBar from './Admin.TopBar'\nimport SwitchRoutes from \"./Admin.Switch\";\nexport const useStyles = makeStyles(\n  (theme: Theme) =>\n    createStyles({\n      grow: {\n        flexGrow: 1,\n      }\n    })\n)\n\nexport default function Admin() {\n  const classes = useStyles()\n\n  return (\n    <div className={classes.grow}>\n      <TopBar />\n      <SwitchRoutes />\n    </div>\n  );\n}\n\n","import React from 'react';\nimport { makeStyles } from 'template-core/styles';\nimport DialogTitle from 'template-core/DialogTitle';\nimport Dialog from 'template-core/Dialog';\n// import DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport { blue } from 'template-core/colors';\n\nconst emails = ['username@gmail.com', 'user02@gmail.com'];\nconst useStyles = makeStyles({\n    avatar: {\n        backgroundColor: blue[100],\n        color: blue[600],\n    },\n});\n\nexport interface SimpleDialogProps {\n    open: boolean,\n    msg: string,\n    close: () => void\n}\n\nexport default function SimpleDialog(props: SimpleDialogProps) {\n    const classes = useStyles();\n    const { open, msg, close } = props;\n    // const [sopen, setOpen] = React.useState(open);\n\n\n    const handleClose = () => {\n        close()\n    };\n\n    return (\n        <Dialog\n            open={open}\n            onBackdropClick={handleClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n        >\n            {/* <DialogTitle id=\"alert-dialog-title\"></DialogTitle> */}\n            <DialogContent>\n                <DialogContentText id=\"alert-dialog-description\">\n                    {msg}\n                </DialogContentText>\n            </DialogContent>\n            {/* <DialogActions>\n                <Button onClick={handleClose} color=\"primary\">\n                    Disagree\n          </Button>\n                <Button onClick={handleClose} color=\"primary\" autoFocus>\n                    Agree\n          </Button>\n            </DialogActions> */}\n        </Dialog>\n    );\n}\n\n// export default function SimpleDialogDemo(props: string) {\n//     const [open, setOpen] = React.useState(false);\n//     const [selectedValue, setSelectedValue] = React.useState(emails[1]);\n\n//     const handleClickOpen = () => {\n//         setOpen(true);\n//     };\n\n//     const handleClose = (value: string) => {\n//         setOpen(false);\n//         setSelectedValue(value);\n//     };\n\n//     return (\n//         <div>\n//             <Typography variant=\"subtitle1\">Selected: {selectedValue}</Typography>\n//             <br />\n//             <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n//                 Open simple dialog\n//       </Button>\n//             <SimpleDialog selectedValue={selectedValue} open={open} onClose={handleClose} />\n//         </div>\n//     );\n// }\n","import React from 'react';\nimport Login from '../../theme/Admin.Signin'\nimport Admin from '../admin/Admin';\nimport SimpleDialog from \"../dialog/dialog.simple\";\n// import { Client } from \"../..\";\n// import { gql } from \"graphql-request\";\nimport { useMutation, ClientContext } from 'graphql-hooks'\n\nexport const Session = React.createContext<{\n    session: null | string,\n    closeSession: () => void\n}>({ session: null, closeSession: () => { } })\n\nconst LOGIN_MUTATION = `#graphql\n          mutation LoginUser($username:String!, $password:String!){\n              sessionLogin(\n                username:$username,\n                password:$password\n              )\n        }\n      `\nconst AUTH = 'authorization'\nexport default function UserSession() {\n    const [session, setSession] = React.useState(localStorage.getItem(AUTH))\n    const client = React.useContext(ClientContext)\n    const [loginUserMutation] = useMutation(LOGIN_MUTATION)\n    const [openAlert, setOpenAlert] = React.useState({\n        msg: '',\n        open: false\n    })\n    const checkSession = async (username: string, password: string) => {\n        const { data, error } = await loginUserMutation({\n            variables: { username, password }\n        })\n        if (error)\n            setOpenAlert({\n                msg: String(error),\n                open: true\n            })\n        else {\n            client.setHeader(AUTH, data.sessionLogin)\n            localStorage.setItem(AUTH, data.sessionLogin)\n            setSession(data.sessionLogin)\n        }\n    }\n\n    if (session) {\n        client.setHeader('authorization', session)\n        return (\n            <Session.Provider value={{\n                session, closeSession: () => {\n                    localStorage.removeItem(AUTH)\n                    setSession(null)\n                }\n            }}>\n                <Admin />\n            </Session.Provider>\n        )\n    }\n    else {\n        return (\n            <>\n                <SimpleDialog msg={openAlert.msg} open={openAlert.open} close={() => { setOpenAlert({ msg: '', open: false }) }} />\n                <Login checkSession={checkSession} />\n            </>\n\n        )\n    }\n}"],"sourceRoot":""}