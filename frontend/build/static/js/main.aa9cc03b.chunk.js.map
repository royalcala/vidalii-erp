{"version":3,"sources":["components sync /.+/.route/.(tsx|js)$","components/core/routes/Default.route.tsx","components/core/session/myAccount.route.tsx","components sync /myAccount/.route/.tab/..+/.(tsx|js)$","components/core/session/myAccount.route.tab.main.tsx","components/core/session/user.edit.route.tsx","components sync /user/.edit/.route/.tab/..+/.(tsx|js)$","components/core/session/user.edit.route.tab.main.tsx","components sync /Admin/.TopBar/.Menu/..+/.context/.(tsx|js)$","components/core/session/Admin.TopBar.Menu.session.context.tsx","reportWebVitals.ts","components/theme/theme.tsx","index.tsx","components/core/form/Table.View.tsx","components/core/session/users.route.tsx","components/core/admin/Admin.TopBar.Menu.many.rcontext.tsx","components/core/form/form.tsx","components/theme/Admin.Signin.tsx","components/core/routes/Routes.many.rcontext.tsx","components/core/admin/Admin.TopBar.Sidebar.tsx","components/core/admin/Admin.TopBar.tsx","components/core/admin/Admin.Switch.tsx","components/core/admin/Admin.tsx","components/core/dialog/dialog.simple.tsx","components/core/session/User.Session.tsx","components/core/admin/Admin.Doc.Header.Save.tsx","components/core/admin/Admin.Doc.Tabs.tsx","components/core/admin/Admin.Doc_.tsx"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","route","name","parent","sidebar","Icon","AccountIcon","Component","getTabs","require","Tabs","dir","default","breadcrum","tabs","Mutation","Symbol","tab","title","mutation","useForm","control","getValues","set","values","util","inspect","replaceAll","useQuery","loading","error","data","JSON","stringify","myUser","config","type","lastname","email","alias","phone","paramaters","params","useParams","_id","user","SessionMenu","closeSession","React","useContext","Session","useState","anchorEl","setAnchorEl","handleClose","aria-label","onClick","event","currentTarget","color","keepMounted","open","Boolean","onClose","TemplateContext","desktopShown","desktopHidden","closeMenu","mobil","badgeContent","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","theme","createMuiTheme","client","GraphQLClient","url","ReactDOM","render","StrictMode","basename","Provider","value","ThemeProvider","CssBaseline","document","getElementById","useStyles","makeStyles","table","TableView","props","classes","entries","useHistory","TableContainer","component","Paper","Table","className","size","TableHead","TableRow","TableCell","align","index","key","FormControl","variant","InputLabel","htmlFor","Input","onChange","TableBody","row","indexRow","Tooltip","to","parameters","nameParameter","join","style","blue","nameField","users","getContext","ListComponents","display","screen","createStyles","root","margin","spacing","width","helperId","Form","Inputs","uniqueId","defaultValue","rules","fullWidth","helperText","noValidate","autoComplete","Copyright","Typography","Link","href","Date","getFullYear","paper","marginTop","flexDirection","alignItems","avatar","backgroundColor","palette","secondary","main","form","submit","SignIn","checkSession","handleSubmit","register","onSubmit","a","username","password","Container","maxWidth","Avatar","TextField","required","label","autoFocus","inputRef","FormControlLabel","Checkbox","Button","Grid","container","item","xs","Box","mt","Routes","list","fullList","menuButton","marginRight","breadcrumbs","marginLeft","titleSidebar","textAlign","nested","paddingLeft","Children","history","setStateDrawer","ListItem","button","push","ListItemIcon","ListItemText","primary","GetParentChildren","filter","GetRouteItems","setStateItems","parentsPrinted","sort","b","find","printed","items","n","SideBar","stateDrawer","stateItems","IconButton","edge","target","Drawer","anchor","role","Breadcrumbs","Divider","List","grow","flexGrow","breakpoints","up","search","position","borderRadius","shape","fade","common","white","searchIcon","padding","height","pointerEvents","justifyContent","inputRoot","inputInput","transition","transitions","create","sectionDesktop","sectionMobile","TopBar","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMobileMenuOpen","isMenuOpen","desktopMenuId","mobileMenuId","closeMobilMenu","closeDesktopMenu","renderDesktopMenuShown","ListMenu","slice","renderDesktopMenuHidden","Menu","anchorOrigin","vertical","horizontal","transformOrigin","renderMobilMenuHidden","AppBar","Toolbar","noWrap","InputBase","placeholder","input","inputProps","aria-controls","aria-haspopup","SwitchRoutes","getPath","path","Admin","SimpleDialog","msg","close","Dialog","onBackdropClick","aria-labelledby","aria-describedby","DialogContent","DialogContentText","createContext","session","AUTH","UserSession","localStorage","getItem","setSession","ClientContext","useMutation","loginUserMutation","openAlert","setOpenAlert","variables","String","setHeader","sessionLogin","setItem","removeItem","text","link","icon","DocSave","gql","p","useLocation","pathname","split","location","replace","saveDocOnClick","query","Array","from","console","log","request","m","TabPanel","children","other","hidden","background","DocTabs","activeTab","setActiveTab","TabsLabel","Tab","a11yProps","TabsContent","newValue","indicatorColor","textColor","scrollButtons","Doc","Map"],"mappings":"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","file":"static/js/main.aa9cc03b.chunk.js","sourcesContent":["var map = {\n\t\"./core/routes/Default.route.tsx\": 155,\n\t\"./core/session/myAccount.route.tsx\": 156,\n\t\"./core/session/user.edit.route.tsx\": 167,\n\t\"./core/session/users.route.tsx\": 174\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 154;","import { Route } from \"components/core/routes/Routes.many.rcontext\";\nimport AccountIcon from 'template-icons/AccountCircle';\nconst route: Route = {\n    name: '/',\n    parent: null,\n    sidebar: false,\n    Icon: AccountIcon,\n    Component: Default\n}\nexport default route\n\nfunction Default() {\n    return (\n        <div>My Default Page</div>\n    )\n}\n\n\n","import React from 'react'\nimport AccountIcon from 'template-icons/AccountCircleTwoTone';\nimport { Route } from 'components/core/routes/Routes.many.rcontext';\nimport { Tab } from \"../admin/Admin.Doc.Tabs\";\nimport { Doc } from \"../admin/Admin.Doc_\";\n\nconst getTabs = require.context(\n    'components',\n    true,\n    /myAccount\\.route\\.tab\\..+\\.(tsx|js)$/\n)\n\nconst Tabs = getTabs.keys().map(dir => {\n    return getTabs(dir).default as Tab\n})\n\n\nconst route: Route = {\n    name: 'MyAccount',\n    parent: 'System',\n    sidebar: true,\n    Icon: AccountIcon,\n    Component: MyAccount\n}\n\nexport default route\n\n\nfunction MyAccount() {\n    return <Doc\n        breadcrum={route}\n        tabs={Tabs}\n    />\n}\n\n","var map = {\n\t\"./core/session/myAccount.route.tab.main.tsx\": 163\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 162;","import React from 'react';\nimport { PropsTab, Tab } from \"components/core/admin/Admin.Doc.Tabs\"\nimport { useMutation, useQuery } from 'graphql-hooks'\nimport { FormProps, Form } from \"../form/form\";\nimport { useForm } from 'react-hook-form';\nimport util from \"util\";\nconst UPDATE_MY_USER = `#graphql\nmutation updateMyUser($user:UserUpdate){\n  userUpdateMyAccount(user:$user){\n    _id\n  }\n}\n`\nconst QUERY_MY_USER = `#graphql\nquery GetMyUser{\n  myUser:userGetMyUser{\n    name\n    lastname\n    email\n    phone    \n    groups\n  }\n}\n`\nconst Mutation = Symbol()\nfunction TabMain({ mutation }: PropsTab) {\n  const { control, getValues } = useForm<{}>()\n\n  mutation.set(Mutation,\n    () => {\n      //util.inspect for print object to string\n      const values = util.inspect(getValues()).replaceAll(\"'\", '\"')\n      return `#graphql\n      userUpdateMyAccount(user:${values}){\n        _id\n      }\n      `\n    }\n  )\n  const { loading, error, data } = useQuery(QUERY_MY_USER)\n  if (loading) return 'Loading...'\n  if (error) return 'Error:' + JSON.stringify(error)\n  if (!data?.myUser?.name)\n    return 'Its required to close your session first.'\n\n  const myUser_config: FormProps['config'] = {\n    name: {\n      type: 'string',\n    },\n    lastname: {\n      type: 'string'\n    },\n    email: {\n      alias: \"email(username)\",\n      type: 'email',\n    },\n    phone: {\n      type: 'number'\n    }\n  }\n  return <Form    \n    data={data.myUser}\n    config={myUser_config}\n    control={control}\n  />\n\n}\n\nconst tab: Tab = {\n  title: '_Main',\n  Component: TabMain,\n}\nexport default tab","import React from \"react\";\nimport { Route } from \"components/core/routes/Routes.many.rcontext\";\nimport AccountIcon from 'template-icons/AccountCircle';\nimport { Tab } from \"../admin/Admin.Doc.Tabs\";\nimport { Doc } from \"../admin/Admin.Doc_\";\nimport { useParams } from \"react-router-dom\";\nconst route: Route = {\n    name: 'User',\n    parent: 'System',\n    paramaters: '/:_id',\n    sidebar: false,\n    Icon: AccountIcon,\n    Component: User\n}\nexport default route\n\nconst getTabs = require.context(\n    'components',\n    true,\n    /user\\.edit\\.route\\.tab\\..+\\.(tsx|js)$/\n)\n\nconst Tabs = getTabs.keys().map(dir => {\n    return getTabs(dir).default as Tab\n})\n\nfunction User() {\n    return <Doc\n        breadcrum={route}\n        tabs={Tabs}\n    />\n}\n\n\n\n","var map = {\n\t\"./core/session/user.edit.route.tab.main.tsx\": 169\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 168;","import React from 'react';\nimport { useFieldArray, useForm } from 'react-hook-form';\nimport { PropsTab, Tab } from '../admin/Admin.Doc.Tabs';\nimport { TableEdit, TableProps } from \"../form/Table.Edit\";\nimport util from \"util\";\nimport { useQuery } from 'graphql-hooks';\nimport { useParams } from 'react-router-dom';\nimport { Form, FormProps } from '../form/form';\n\n\n\n\nconst Mutation = Symbol()\nfunction TabMain({ mutation }: PropsTab) {\n  const { control, getValues } = useForm<{}>()\n  let params: any = useParams();\n  const { loading, error, data } = useQuery(`#graphql\n {\n    user:userFind(operators:\"${params._id}\") {\n    _id\n    name\n    lastname\n    email\n    phone\n    groups \n    password     \n  }\n}\n  `)\n\n  mutation.set(Mutation,\n    () => {\n      //util.inspect for print object to string\n      const values = util.inspect(getValues()).replaceAll(\"'\", '\"')\n      return `#graphql\n      userUpdate(\n        user: ${values},\n        _id:\\\"${params._id}\\\"){\n        _id\n      }\n      `\n    }\n  )\n\n  const config: FormProps['config'] = {\n    name: {\n      alias: \"Name\",\n      type: 'string'\n    },\n    lastname: {\n      alias: \"LastName\",\n      type: 'string'\n    },\n    email:{\n      type:'email'\n    }\n  }\n  if (loading) return 'loading...'\n  else if (error) return 'Error:' + JSON.stringify(error)\n  else\n    return <Form\n      data={data.user[0]}\n      config={config}\n      control={control}\n    />\n}\n\n\n\n\nconst tab: Tab = {\n  title: '_Main',\n  Component: TabMain,\n}\nexport default tab","var map = {\n\t\"./core/session/Admin.TopBar.Menu.session.context.tsx\": 171\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 170;","import React from \"react\"\nimport AccountIcon from 'template-icons/AccountCircle';\nimport { TemplateContext } from '../admin/Admin.TopBar.Menu.many.rcontext'\nimport IconButton from 'template-core/IconButton';\nimport Badge from 'template-core/Badge';\nimport MenuItem from \"template-core/MenuItem\";\nimport Menu from 'template-core/Menu';\nimport { Session } from \"./User.Session\";\n\nfunction SessionMenu() {\n    const { closeSession } = React.useContext(Session)\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n\n    const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    return (\n        <div>\n            <IconButton aria-label=\"My Account\" onClick={handleClick} color=\"inherit\">\n                <AccountIcon />\n            </IconButton>\n            <Menu\n                id=\"myaccount-menu\"\n                anchorEl={anchorEl}\n                keepMounted\n                open={Boolean(anchorEl)}\n                onClose={handleClose}\n            >\n                <MenuItem onClick={handleClose}>My account</MenuItem>\n                <MenuItem onClick={() => {\n                    closeSession()\n                }}>Logout</MenuItem>\n            </Menu>\n        </div>\n    );\n}\n\nexport default TemplateContext({\n    desktopShown: <SessionMenu />,\n    desktopHidden: (closeMenu) => <MenuItem onClick={closeMenu}>Title User</MenuItem>,\n    mobil:\n        <MenuItem>\n            <IconButton aria-label=\"My Account\" color=\"inherit\">\n                <Badge badgeContent={4} color=\"secondary\">\n                    <AccountIcon />\n                </Badge>\n            </IconButton>\n            <p>My Account</p>\n        </MenuItem>,\n\n\n})\n// export default TemplateContext({\n//     title: 'User',\n//     ariaLabel: 'this can be better a Component',\n//     componentIcon: <AccountIcon />\n// })","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createMuiTheme } from 'template-core/styles';\nimport { red } from 'template-core/colors';\n\n\nexport const theme = createMuiTheme({\n  // palette: {\n  //   primary: {\n  //     main: '#556cd6',\n  //   },\n  //   secondary: {\n  //     main: '#19857b',\n  //   },\n  //   error: {\n  //     main: red.A400,\n  //   },\n  //   background: {\n  //     default: '#fff',\n  //   },\n  // },\n});\n","//CORE\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport CssBaseline from 'template-core/CssBaseline';\nimport { ThemeProvider } from 'template-core/styles';\nimport {\n  BrowserRouter,\n} from \"react-router-dom\";\nimport { theme } from './components/theme/theme';\nimport UserSession from \"./components/core/session/User.Session\";\nimport { GraphQLClient, ClientContext } from 'graphql-hooks'\n// import { GraphQLClient } from \"graphql-request\";\n\n\n// const client = new GraphQLClient('http://localhost:4009/graphql')\n// export const Client = React.createContext({\n//   client\n// })\nconst client = new GraphQLClient({\n  url: '/graphql'\n})\n\n\nReactDOM.render(\n  <React.StrictMode>\n     <BrowserRouter basename=\"/app\">\n      <ClientContext.Provider value={client}>\n        <ThemeProvider theme={theme}>\n          {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n          <CssBaseline />\n          <UserSession/>\n        </ThemeProvider>\n      </ClientContext.Provider>\n    </BrowserRouter>\n  </React.StrictMode >,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import React from \"react\"\nimport { makeStyles } from 'template-core/styles';\nimport Table from 'template-core/Table';\nimport TableBody from 'template-core/TableBody';\nimport TableCell from 'template-core/TableCell';\nimport TableContainer from 'template-core/TableContainer';\nimport TableHead from 'template-core/TableHead';\nimport TableRow from 'template-core/TableRow';\nimport Paper from 'template-core/Paper';\nimport OpenInNewIcon from 'template-icons/OpenInNew';\nimport { blue } from 'template-core/colors';\nimport IconButton from 'template-core/IconButton';\nimport Tooltip from 'template-core/Tooltip';\n// import Link from 'template-core/Link';\nimport { Link } from 'react-router-dom'\nimport { FormControl, FormHelperText, Input, InputLabel } from \"template-core\";\nimport { useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles({\n    table: {\n        // minWidth: 650,\n    },\n});\n\n\nexport type TableProps = {\n    config: {\n        [key: string]: {\n            alias: string,\n            type: 'string' | 'number' | 'email' | 'password' | 'autocompletes'//html5\n        }\n    },\n    data: any[]\n    open: {\n        url: string,//-->/System.User\n        parameters: string[]//-->_id\n    } // /route/:slug\n}\n\nexport function TableView(props: TableProps) {\n    const classes = useStyles();\n    const entries = Object.entries(props.config)\n    let history = useHistory();\n    return (\n        <TableContainer component={Paper}>\n            <Table className={classes.table} size=\"small\" aria-label=\"dense table\">\n                <TableHead>\n                    <TableRow>\n                        <TableCell align=\"left\" key={0} />\n                        {entries.map(\n                            ([key, value], index) => (\n                                <TableCell align=\"left\" key={index + 1}>\n                                    <FormControl variant=\"filled\">\n                                        <InputLabel htmlFor={key + index}>{value.alias}</InputLabel>\n                                        <Input\n                                            id={key + index}\n                                            onChange={() => { }}\n                                            name={key}\n                                        />\n                                    </FormControl>\n                                </TableCell>\n                            )\n                        )}\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {\n                        props.data.map(\n                            (row, indexRow) => {\n                                return (\n                                    <TableRow key={indexRow}>\n                                        <TableCell align=\"left\" key={indexRow}>\n                                            <Tooltip title=\"Open\">\n                                                {/* <IconButton color=\"inherit\" aria-label=\"Delete\" */}\n                                                <Link to={props.open.url + `/${props.open.parameters.map(\n                                                    nameParameter => {\n                                                        return row[nameParameter]\n                                                    }\n                                                ).join('/')\n                                                    }`}\n                                                // onClick={() => {\n                                                //     history.push(props.routeToOpen);\n                                                // }}}\n                                                >\n                                                    <OpenInNewIcon style={{ color: blue[300] }} />\n                                                    {/* </IconButton> */}\n                                                </Link>\n                                            </Tooltip>\n                                        </TableCell>\n                                        {entries.map(\n                                            ([nameField, configField], index) => {\n                                                return (\n                                                    <TableCell align=\"left\" key={index} >\n                                                        {row[nameField]}\n                                                    </TableCell>\n                                                )\n                                            }\n                                        )}\n                                    </TableRow>\n                                )\n                            }\n\n                        )\n                    }\n                </TableBody>\n            </Table>\n        </TableContainer>\n    )\n}","import React from \"react\";\nimport { Route } from \"components/core/routes/Routes.many.rcontext\";\nimport AccountIcon from 'template-icons/AccountCircle';\nimport { TableView, TableProps } from \"../form/Table.View\";\nimport { useQuery } from \"graphql-hooks\";\nconst route: Route = {\n    name: 'Users',\n    parent: 'System',\n    sidebar: true,\n    Icon: AccountIcon,\n    Component: Users\n}\nexport default route\n\n\nconst QUERY = `#graphql\nquery Users{\n    users:userFind {\n      _id\n      name\n      lastname\n      email\n      phone\n      groups      \n    }\n  }`\n\n\nfunction Users() {\n    const { loading, error, data } = useQuery(QUERY)\n    if (loading) return 'Loading...'\n    if (error) return 'Error:' + JSON.stringify(error)\n    const config: TableProps['config'] = {\n        _id: {\n            alias: \"ID\",\n            type: 'string'\n        },\n        lastname: {\n            alias: \"LastName\",\n            type: \"string\"\n        }\n    }\n    return <TableView config={config} data={data.users} open={{ url: \"/System.User\", parameters: ['_id'] }} />\n}\n\n\n\n","import React from \"react\"\nimport MailIcon from 'template-icons/Mail';\nimport IconButton from 'template-core/IconButton';\nimport Badge from 'template-core/Badge';\nimport MenuItem from \"template-core/MenuItem\";\n\nexport type PropsComponentsCustom = {\n    screen: 'desktop' | 'mobil',\n    display: 'shown' | 'hidden',\n    closeMenu: () => void,\n}\nconst getContext = require.context(\n    'components',\n    true,\n    /Admin\\.TopBar\\.Menu\\..+\\.context\\.(tsx|js)$/\n)\nexport const ListComponents = getContext.keys().map(dir => {\n    //TODO ordered position here\n    return getContext(dir).default as React.FunctionComponent<PropsComponentsCustom>\n})\ninterface TopBarMenuProps {\n    desktopShown: JSX.Element,\n    desktopHidden: (close: () => void) => JSX.Element,\n    mobil: JSX.Element\n}\n\nexport function TemplateContext(\n    props: TopBarMenuProps\n    // { title, ariaLabel, componentIcon }: {\n    //     title: string,\n    //     ariaLabel: string,\n    //     componentIcon: JSX.Element\n    // }\n) {\n    return function ({ display, screen, closeMenu }: PropsComponentsCustom) {\n        if (screen === 'desktop' && display === 'shown')\n            return props.desktopShown\n        // return (\n        //     <IconButton aria-label={ariaLabel} color=\"inherit\">\n        //         <Badge badgeContent={4} color=\"secondary\">\n        //             {componentIcon}\n        //         </Badge>\n        //     </IconButton>\n        // )\n        if (screen === 'desktop' && display === 'hidden')\n            return props.desktopHidden(closeMenu)\n        // return <MenuItem onClick={closeMenu}>{title}</MenuItem>\n\n        if (screen === 'mobil')\n            return props.mobil\n        // return (\n        //     <MenuItem>\n        //         <IconButton aria-label={ariaLabel} color=\"inherit\">\n        //             <Badge badgeContent={4} color=\"secondary\">\n        //                 {componentIcon}\n        //             </Badge>\n        //         </IconButton>\n        //         <p>{title}</p>\n        //     </MenuItem>\n        // )\n    }\n}","import FormControl from 'template-core/FormControl';\nimport FormHelperText from 'template-core/FormHelperText';\nimport Input from 'template-core/Input';\nimport InputLabel from 'template-core/InputLabel';\nimport { createStyles, makeStyles, Theme } from 'template-core/styles';\nimport { Controller, UseControllerOptions, UseFormMethods } from 'react-hook-form';\ntype FormConfig = {\n    alias?: string //other name for the data\n    type: 'string' | 'number' | 'email' | 'password' | 'autocompletes'//html5\n    helperText?: string,\n    rules?: UseControllerOptions<any>['rules'],\n    fullWidth?: boolean\n}\nexport type FormProps = {\n    // id: string\n    data: {\n        [key: string]: any\n    },\n    config: {\n        [key: string]: FormConfig\n    },\n    control: UseFormMethods['control']\n\n}\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            '& .MuiFormControl-root': {\n                margin: theme.spacing(1),\n                width: '25ch',\n            },\n        },\n    }),\n);\nlet helperId = 0\nexport function Form(props: FormProps) {\n    const classes = useStyles()\n    const Inputs = Object.entries(props.config).map(\n        ([key, config]) => {\n            const uniqueId = 'form_vidalii_' + (helperId++)\n            return (\n                <Controller\n                    name={key}\n                    control={props.control}\n                    defaultValue={props.data[key]}\n                    rules={config?.rules ? config.rules : {}}\n                    render={({ onChange, value }) =>\n                        <FormControl fullWidth={config?.fullWidth ? true : false}>\n                            <InputLabel htmlFor={uniqueId}>{config?.alias ? config.alias : key}</InputLabel>\n                            <Input\n                                type={config.type}\n                                id={uniqueId}\n                                value={value}\n                                onChange={onChange}\n                                name={key}\n                            />\n                            {config?.helperText && (\n                                <FormHelperText>{config.helperText}</FormHelperText>\n                            )}\n                        </FormControl>\n                    }\n                />\n\n            )\n        }\n    )\n    return (\n        <form\n            className={classes.root}\n            noValidate\n            autoComplete=\"off\"\n        >\n            {Inputs}\n        </form>\n    )\n}","import React, { useContext } from 'react';\nimport Avatar from 'template-core/Avatar';\nimport Button from 'template-core/Button';\nimport CssBaseline from 'template-core/CssBaseline';\nimport TextField from 'template-core/TextField';\nimport FormControlLabel from 'template-core/FormControlLabel';\nimport Checkbox from 'template-core/Checkbox';\nimport Link from 'template-core/Link';\nimport Grid from 'template-core/Grid';\nimport Box from 'template-core/Box';\nimport LockOutlinedIcon from 'template-icons/LockOutlined';\nimport Typography from 'template-core/Typography';\nimport { makeStyles } from 'template-core/styles';\nimport Container from 'template-core/Container';\nimport { useForm } from 'react-hook-form';\n\n\n//context\n// import { SessionContext } from '../../Session/User.Session'\n// import { SessionContext } from '../core/Session/User.Session'\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Your Website\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\n\ninterface FormData {\n  username: string;\n  password: string;\n}\n\nexport default function SignIn(props:{checkSession:(username: string, password: string) => Promise<void>}) {\n  const checkSession = props.checkSession as (username: string, password: string) => Promise<void>\n  const { handleSubmit, register } = useForm<FormData>();\n\n  const onSubmit = handleSubmit(\n    async ({ username, password }) => {\n      await checkSession(username, password)\n    });\n  const classes = useStyles()\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form className={classes.form} onSubmit={onSubmit}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"username\"\n            label=\"username\"\n            name=\"username\"\n            autoComplete=\"username\"\n            autoFocus\n            inputRef={register}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            inputRef={register}\n          />\n          <FormControlLabel\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\n            label=\"Remember me\"\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Sign In\n          </Button>\n          <Grid container>\n            <Grid item xs>\n              <Link href=\"#\" variant=\"body2\">\n                Forgot password?\n              </Link>\n            </Grid>\n            <Grid item>\n              <Link href=\"#\" variant=\"body2\">\n                {\"Don't have an account? Sign Up\"}\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={8}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}","\nexport type Route = {\n    name: string,\n    parent: string | null\n    paramaters?: string, // /:parameter1/:parameter2\n    sidebar?: boolean,\n    Icon: React.FunctionComponent,\n    Component: React.FunctionComponent | Function\n}\n\nconst getContext = require.context(\n    'components',\n    true,\n    /.+\\.route\\.(tsx|js)$/\n)\n\nexport const Routes = getContext.keys().map(dir => {\n    return getContext(dir).default as Route //as React.FunctionComponent<Props>\n})","import React from 'react';\nimport { makeStyles, createStyles, Theme, } from 'template-core/styles';\nimport Drawer from 'template-core/Drawer';\nimport List from 'template-core/List';\nimport Divider from 'template-core/Divider';\nimport ListItem from 'template-core/ListItem';\nimport ListItemIcon from 'template-core/ListItemIcon';\nimport ListItemText from 'template-core/ListItemText';\nimport MenuIcon from 'template-icons/Menu';\nimport IconButton from 'template-core/IconButton';\nimport { Routes, Route } from '../routes/Routes.many.rcontext'\nimport Breadcrumbs from 'template-core/Breadcrumbs';\nimport Link from 'template-core/Link';\nimport Typography from 'template-core/Typography';\nimport ExpandMore from 'template-icons/ExpandMoreTwoTone';\nimport {\n  useHistory\n} from \"react-router-dom\";\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n  list: {\n    width: 300,\n  },\n  fullList: {\n    width: 'auto',\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  breadcrumbs: {\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n  },\n  titleSidebar: {\n    textAlign: 'center'\n  },\n  nested: {\n    paddingLeft: theme.spacing(4),\n  }\n}))\n\n\nconst Children = (value: Route, index: number, history: any, setStateDrawer: any) => {\n  const to = (value?.parent || '') + '.' + value.name\n  return (\n    < ListItem button key={index} onClick={() => {\n      setStateDrawer(false)\n      history.push('/'+to);\n    }}>\n      <ListItemIcon><value.Icon /></ListItemIcon>\n      <ListItemText primary={value.name} />\n    </ListItem>\n  )\n}\nconst GetParentChildren = (parent: string, history: any, setStateDrawer: any) => {\n  return Routes.filter(value => value.sidebar === true).filter(value => value.parent === parent).map(\n    (value, index) => Children(value, index, history, setStateDrawer)\n  )\n}\nconst GetRouteItems = (Routes: Route[], setStateItems: () => (a: Items) => void, history: any, setStateDrawer: any) => {\n  const parentsPrinted: string[] = []\n  return Routes.filter(value => value.sidebar === true)\n    .sort(\n      (a, b) => {\n        if (a.name > b.name)\n          return 1\n        else if (a.name === b.name)\n          return 0\n        else\n          return -1\n      }\n    ).map(\n      (value, index) => {\n        if (value.parent === null)\n          return Children(value, index, history, setStateDrawer)\n        else {\n          //is Parent\n          const found = parentsPrinted.find(printed => printed === value.parent)\n          if (!found) {\n            parentsPrinted.push(value.parent)\n            return (\n              < ListItem button key={index} onClick={\n                () => {\n                  setStateItems()({\n                    breadcrum: `${value.parent}`,\n                    items: GetParentChildren(value.parent as string, history, setStateDrawer)\n                  })\n                }\n              }>\n                <ListItemIcon><ExpandMore /></ListItemIcon>\n                <ListItemText primary={value.parent} />\n              </ListItem>\n            )\n          }\n          else\n            return null //is parent duplicated\n        }\n      }\n    ).filter(n => n) //remove null\n}\n\ntype Items = {\n  breadcrum: string,\n  items: JSX.Element[]\n}\nexport default function SideBar() {\n  let history = useHistory();\n  const classes = useStyles();\n  const [stateDrawer, setStateDrawer] = React.useState(false);\n\n  //@ts-ignore\n  const [stateItems, setStateItems] = React.useState<Items>({\n    breadcrum: '',\n    //@ts-ignore\n    items: GetRouteItems(Routes, () => setStateItems, history, setStateDrawer)\n  })\n  const toggleDrawer = (\n    event: any\n  ) => {\n    if (stateDrawer === false)\n      setStateDrawer(true)\n    else if (event.target.className === \"MuiBackdrop-root\")\n      setStateDrawer(!stateDrawer)\n  }\n\n\n  return (\n    <>\n      <IconButton\n        edge=\"start\"\n        className={classes.menuButton}\n        color=\"inherit\"\n        aria-label=\"open drawer\"\n        onClick={toggleDrawer}\n      >\n        <Drawer anchor='left' open={stateDrawer}>\n          <div\n            role=\"presentation\"\n          >\n            <h1 className={classes.titleSidebar}>Vidalii ERP</h1>\n            <Breadcrumbs aria-label=\"breadcrumb\" className={classes.breadcrumbs}>\n              <Link color=\"inherit\" href=\"#\" onClick={\n                () => {\n                  setStateItems({\n                    breadcrum: '',\n                    items: GetRouteItems(Routes, () => setStateItems, history, setStateDrawer)\n                  })\n                }\n              }>\n                / Main\n              </Link>\n              {stateItems.breadcrum !== '' &&\n                <Link color=\"inherit\" href=\"#\" >\n                  <Typography color=\"textPrimary\">{stateItems.breadcrum}</Typography>\n                </Link>\n              }\n\n\n            </Breadcrumbs>\n            <Divider />\n            <List className={classes.list}>\n              {stateItems.items}\n            </List>\n          </div >\n\n        </Drawer>\n        <MenuIcon />\n      </IconButton>\n\n    </>\n  )\n}\n","import React from 'react';\nimport { fade, makeStyles, Theme, createStyles } from 'template-core/styles';\nimport AppBar from 'template-core/AppBar';\nimport Toolbar from 'template-core/Toolbar';\nimport IconButton from 'template-core/IconButton';\nimport Typography from 'template-core/Typography';\nimport InputBase from 'template-core/InputBase';\nimport SearchIcon from 'template-icons/Search';\nimport MoreIcon from 'template-icons/MoreVert';\nimport Menu from 'template-core/Menu';\nimport LeftDrawer from \"./Admin.TopBar.Sidebar\";\n//Components array of Menu right\nimport { ListComponents as ListMenu } from './Admin.TopBar.Menu.many.rcontext'\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        grow: {\n            flexGrow: 1,\n        },\n        menuButton: {\n            marginRight: theme.spacing(2),\n        },\n        title: {\n            display: 'none',\n            [theme.breakpoints.up('sm')]: {\n                display: 'block',\n            },\n        },\n        search: {\n            position: 'relative',\n            borderRadius: theme.shape.borderRadius,\n            backgroundColor: fade(theme.palette.common.white, 0.15),\n            '&:hover': {\n                backgroundColor: fade(theme.palette.common.white, 0.25),\n            },\n            marginRight: theme.spacing(2),\n            marginLeft: 0,\n            width: '100%',\n            [theme.breakpoints.up('sm')]: {\n                marginLeft: theme.spacing(3),\n                width: 'auto',\n            },\n        },\n        searchIcon: {\n            padding: theme.spacing(0, 2),\n            height: '100%',\n            position: 'absolute',\n            pointerEvents: 'none',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n        },\n        inputRoot: {\n            color: 'inherit',\n        },\n        inputInput: {\n            padding: theme.spacing(1, 1, 1, 0),\n            // vertical padding + font size from searchIcon\n            paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n            transition: theme.transitions.create('width'),\n            width: '100%',\n            [theme.breakpoints.up('md')]: {\n                width: '20ch',\n            },\n        },\n        sectionDesktop: {\n            display: 'none',\n            [theme.breakpoints.up('md')]: {\n                display: 'flex',\n            },\n        },\n        sectionMobile: {\n            display: 'flex',\n            [theme.breakpoints.up('md')]: {\n                display: 'none',\n            },\n        },\n    }),\n);\n\nexport default function TopBar() {\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null)\n    const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState<null | HTMLElement>(null);\n    const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n    const isMenuOpen = Boolean(anchorEl);\n    const desktopMenuId = 'primary-search-account-menu';\n    const mobileMenuId = 'primary-search-account-menu-mobile';\n\n    const closeMobilMenu = () => {\n        setMobileMoreAnchorEl(null);\n    };\n    const closeDesktopMenu = () => {\n        setAnchorEl(null);\n        closeMobilMenu();\n    };\n\n    const openDesktopMenu = (event: React.MouseEvent<HTMLElement>) => {\n        setAnchorEl(event.currentTarget);\n    }\n    const openMobilMenu = (event: React.MouseEvent<HTMLElement>) => {\n        setMobileMoreAnchorEl(event.currentTarget);\n    };\n    // console.log('ComponentsDynamic:', ComponentsDynamic)\n    const renderDesktopMenuShown =\n        //list.menu.slice(0, 3)\n        // menuItems.slice(0, 3)\n        ListMenu.slice(0, 3)\n            .map(\n                (Component, index) => {\n                    return <Component display='shown' screen='desktop' closeMenu={closeDesktopMenu} key={index} />\n                }\n            )\n\n    const renderDesktopMenuHidden = (\n        <Menu\n            anchorEl={anchorEl}\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n            id={desktopMenuId}\n            keepMounted\n            transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n            open={isMenuOpen}\n            onClose={closeDesktopMenu}\n        >\n            {\n                ListMenu.slice(3).map(\n                    (Component,index) => {\n                        return <Component display='hidden' screen='desktop' closeMenu={closeDesktopMenu} key={index} />\n                    }\n                )\n            }\n        </Menu>\n    )\n\n    const renderMobilMenuHidden = (\n        <Menu\n            anchorEl={mobileMoreAnchorEl}\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n            id={mobileMenuId}\n            keepMounted\n            transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n            open={isMobileMenuOpen}\n            onClose={closeMobilMenu}\n        >\n            {ListMenu.map(\n                (Component,index) => <Component display='hidden' screen='mobil' closeMenu={closeMobilMenu} key={index} />\n            )}\n        </Menu>\n    );\n\n    // const [state, setState] = React.useState(false)\n    return (\n        <div className={classes.grow}>\n            <AppBar position=\"static\">\n                <Toolbar variant=\"dense\">\n                    {/* <IconButton\n                        edge=\"start\"\n                        className={classes.menuButton}\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                    >\n                        <MenuIcon />\n                    </IconButton> */}\n                    <LeftDrawer />\n                    <Typography className={classes.title} variant=\"h6\" noWrap>\n                        Vidalii ERP\n          </Typography>\n                    <div className={classes.search}>\n                        <div className={classes.searchIcon}>\n                            <SearchIcon />\n                        </div>\n                        <InputBase\n                            placeholder=\"Search…\"\n                            classes={{\n                                root: classes.inputRoot,\n                                input: classes.inputInput,\n                            }}\n                            inputProps={{ 'aria-label': 'search' }}\n                        />\n                    </div>\n                    <div className={classes.grow} />\n                    <div className={classes.sectionDesktop}>\n                        {renderDesktopMenuShown}\n                        <IconButton\n                            aria-label=\"show more\"\n                            aria-controls={desktopMenuId}\n                            aria-haspopup=\"true\"\n                            onClick={openDesktopMenu}\n                            color=\"inherit\"\n                        >\n                            <MoreIcon />\n                        </IconButton>\n                    </div>\n                    <div className={classes.sectionMobile}>\n                        <IconButton\n                            aria-label=\"show more\"\n                            aria-controls={mobileMenuId}\n                            aria-haspopup=\"true\"\n                            onClick={openMobilMenu}\n                            color=\"inherit\"\n                        >\n                            <MoreIcon />\n                        </IconButton>\n                    </div>\n                </Toolbar>\n            </AppBar>\n            {renderDesktopMenuHidden}\n            {renderMobilMenuHidden}\n        </div>\n    );\n}\n","import {\n    Switch, Route\n} from \"react-router-dom\";\nimport { Routes } from \"../routes/Routes.many.rcontext\";\n\n\n\nexport default function SwitchRoutes() {\n    const getPath = (name: string, parent: string | null, parameters: string | undefined) => {\n        let url = parent === null\n            ? '/' + name\n            : '/' + parent + '.' + name\n        if (parameters)\n            url = url + parameters\n        return url\n    }\n    return (\n        <Switch>\n            { Routes.map(\n                ({ Component, name, parent, paramaters }, index) => {\n                    return (\n                        <Route\n                            key={index}\n                            path={getPath(name, parent, paramaters)}\n                            component={Component as any}\n                        />\n                    )\n                }\n            )}\n        </Switch>\n    )\n}","import React from 'react';\nimport { makeStyles, Theme, createStyles } from 'template-core/styles';\nimport TopBar from './Admin.TopBar'\nimport SwitchRoutes from \"./Admin.Switch\";\nexport const useStyles = makeStyles(\n  (theme: Theme) =>\n    createStyles({\n      grow: {\n        flexGrow: 1,\n      }\n    })\n)\n\nexport default function Admin() {\n  const classes = useStyles()\n\n  return (\n    <div className={classes.grow}>\n      <TopBar />\n      <SwitchRoutes />\n    </div>\n  );\n}\n\n","import React from 'react';\nimport { makeStyles } from 'template-core/styles';\nimport DialogTitle from 'template-core/DialogTitle';\nimport Dialog from 'template-core/Dialog';\n// import DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport { blue } from 'template-core/colors';\n\nconst emails = ['username@gmail.com', 'user02@gmail.com'];\nconst useStyles = makeStyles({\n    avatar: {\n        backgroundColor: blue[100],\n        color: blue[600],\n    },\n});\n\nexport interface SimpleDialogProps {\n    open: boolean,\n    msg: string,\n    close: () => void\n}\n\nexport default function SimpleDialog(props: SimpleDialogProps) {\n    const classes = useStyles();\n    const { open, msg, close } = props;\n    // const [sopen, setOpen] = React.useState(open);\n\n\n    const handleClose = () => {\n        close()\n    };\n\n    return (\n        <Dialog\n            open={open}\n            onBackdropClick={handleClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n        >\n            {/* <DialogTitle id=\"alert-dialog-title\"></DialogTitle> */}\n            <DialogContent>\n                <DialogContentText id=\"alert-dialog-description\">\n                    {msg}\n                </DialogContentText>\n            </DialogContent>\n            {/* <DialogActions>\n                <Button onClick={handleClose} color=\"primary\">\n                    Disagree\n          </Button>\n                <Button onClick={handleClose} color=\"primary\" autoFocus>\n                    Agree\n          </Button>\n            </DialogActions> */}\n        </Dialog>\n    );\n}\n\n// export default function SimpleDialogDemo(props: string) {\n//     const [open, setOpen] = React.useState(false);\n//     const [selectedValue, setSelectedValue] = React.useState(emails[1]);\n\n//     const handleClickOpen = () => {\n//         setOpen(true);\n//     };\n\n//     const handleClose = (value: string) => {\n//         setOpen(false);\n//         setSelectedValue(value);\n//     };\n\n//     return (\n//         <div>\n//             <Typography variant=\"subtitle1\">Selected: {selectedValue}</Typography>\n//             <br />\n//             <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n//                 Open simple dialog\n//       </Button>\n//             <SimpleDialog selectedValue={selectedValue} open={open} onClose={handleClose} />\n//         </div>\n//     );\n// }\n","import React from 'react';\nimport Login from '../../theme/Admin.Signin'\nimport Admin from '../admin/Admin';\nimport SimpleDialog from \"../dialog/dialog.simple\";\n// import { Client } from \"../..\";\n// import { gql } from \"graphql-request\";\nimport { useMutation, ClientContext } from 'graphql-hooks'\n\nexport const Session = React.createContext<{\n    session: null | string,\n    closeSession: () => void\n}>({ session: null, closeSession: () => { } })\n\nconst LOGIN_MUTATION = `#graphql\n          mutation LoginUser($username:String!, $password:String!){\n              sessionLogin(\n                username:$username,\n                password:$password\n              )\n        }\n      `\nconst AUTH = 'authorization'\nexport default function UserSession() {\n    const [session, setSession] = React.useState(localStorage.getItem(AUTH))\n    const client = React.useContext(ClientContext)\n    const [loginUserMutation] = useMutation(LOGIN_MUTATION)\n    const [openAlert, setOpenAlert] = React.useState({\n        msg: '',\n        open: false\n    })\n    const checkSession = async (username: string, password: string) => {\n        const { data, error } = await loginUserMutation({\n            variables: { username, password }\n        })\n        if (error)\n            setOpenAlert({\n                msg: String(error),\n                open: true\n            })\n        else {\n            client.setHeader(AUTH, data.sessionLogin)\n            localStorage.setItem(AUTH, data.sessionLogin)\n            setSession(data.sessionLogin)\n        }\n    }\n\n    if (session) {\n        client.setHeader('authorization', session)\n        return (\n            <Session.Provider value={{\n                session, closeSession: () => {\n                    localStorage.removeItem(AUTH)\n                    setSession(null)\n                }\n            }}>\n                <Admin />\n            </Session.Provider>\n        )\n    }\n    else {\n        return (\n            <>\n                <SimpleDialog msg={openAlert.msg} open={openAlert.open} close={() => { setOpenAlert({ msg: '', open: false }) }} />\n                <Login checkSession={checkSession} />\n            </>\n\n        )\n    }\n}","import React from 'react';\nimport { makeStyles, createStyles, Theme } from 'template-core/styles';\nimport Paper from 'template-core/Paper';\nimport Grid from 'template-core/Grid';\nimport Box from 'template-core/Box';\nimport Breadcrumbs from 'template-core/Breadcrumbs';\nimport Link from 'template-core/Link';\nimport Typography from 'template-core/Typography';\nimport Button from 'template-core/Button';\nimport Workflow from \"./Admin.Doc.Workflow\";\nimport { ClientContext } from \"graphql-hooks\";\nimport { useLocation } from 'react-router-dom';\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            flexGrow: 1,\n        },\n        paper: {\n            padding: theme.spacing(1),\n            textAlign: 'left',\n            color: theme.palette.text.secondary,\n        },\n        link: {\n            display: 'flex',\n        },\n        icon: {\n            marginRight: theme.spacing(0.5),\n            width: 20,\n            height: 20,\n        },\n        button: {\n            marginRight: theme.spacing(0.5)\n        }\n    }),\n);\n\nexport type Props = {\n    breadcrum: {\n        name: string,\n        parent: null | string,\n        Icon: Function\n    },\n    gql: {\n        mutation: Map<Symbol, () => string>,\n    }\n}\n\n\nexport function DocSave({ breadcrum, gql }: Props) {\n    const classes = useStyles();\n    const client = React.useContext(ClientContext)\n    const p = useLocation().pathname.split('/')\n    const location = (p[0] + '_' + p[1]).replace('.', '_')\n    const saveDocOnClick = async () => {\n        let query = Array.from(gql.mutation.values()).map(\n            values => values()\n        ).join(' ')\n        query = `mutation ${location}{ ${query} }`\n        console.log({ query })\n        const response = await client.request({\n            query\n        })\n    }\n\n    return (\n        <>\n            <Box m={1}>\n                <Breadcrumbs aria-label=\"breadcrumb\">\n                    {breadcrum?.parent !== null ?\n                        <Link color=\"inherit\" href=\"#\" className={classes.link}>\n                            {breadcrum.parent}\n                        </Link>\n                        : <Link color=\"inherit\" href=\"#\" className={classes.link}>\n                            /\n            </Link>\n                    }\n                    <Typography color=\"textPrimary\" className={classes.link}>\n                        <breadcrum.Icon className={classes.icon} />\n                        {breadcrum.name}\n                    </Typography>\n                </Breadcrumbs>\n            </Box>\n            < Box m={1} >\n                <Button\n                    onClick={saveDocOnClick}\n                    variant=\"outlined\" color=\"primary\" className={classes.button}\n                >\n                    Save\n                    </Button>\n                <Button color=\"secondary\" className={classes.button}>\n                    Discard\n                    </Button>\n            </Box >\n        </>\n    )\n}\n","import React from 'react';\nimport { makeStyles, Theme } from 'template-core/styles';\nimport AppBar from 'template-core/AppBar';\nimport Tabs from 'template-core/Tabs';\nimport Tab from 'template-core/Tab';\nimport Typography from 'template-core/Typography';\nimport Box from 'template-core/Box';\nimport type { Props as PropsHeader } from \"./Admin.Doc.Header.Save\";\n\n\ninterface TabPanelProps {\n    children?: React.ReactNode;\n    index: any;\n    value: any;\n}\n\nfunction TabPanel(props: TabPanelProps) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`scrollable-auto-tabpanel-${index}`}\n            aria-labelledby={`scrollable-auto-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box p={3}>\n                    <Typography>{children}</Typography>\n                </Box>\n            )}\n        </div>\n    );\n}\n\nfunction a11yProps(index: any) {\n    return {\n        id: `scrollable-auto-tab-${index}`,\n        'aria-controls': `scrollable-auto-tabpanel-${index}`,\n    };\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n    root: {\n        flexGrow: 1,\n        width: '100%',\n        backgroundColor: theme.palette.background.paper,\n    },\n}));\nexport type PropsTab = {\n    mutation: PropsHeader['gql']['mutation']\n}\nexport type Tab = {\n    title: string,\n    Component: Function\n}\n\n\nexport default function DocTabs(props: { tabs: Tab[], mutation: PropsTab['mutation'] }) {\n    const classes = useStyles();\n    const [activeTab, setActiveTab] = React.useState(0);\n\n    const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\n        setActiveTab(newValue);\n    };\n\n    const TabsLabel = props.tabs.sort(\n        (a, b) => {\n            if (a.title > b.title)\n                return 1\n            else if (a.title === b.title)\n                return 0\n            else\n                return -1\n        }\n    ).map(\n        (tab, index) => {\n            return (\n                <Tab label={tab.title} {...a11yProps(index)} key={index}/>\n            )\n        }\n    )\n    const TabsContent = props.tabs.map(\n        (tab, index) => {\n            return (\n                <TabPanel value={activeTab} index={index} key={index}>\n                    <tab.Component mutation={props.mutation} key={index} />\n                </TabPanel>\n            )\n        }\n    )\n\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\" color=\"default\">\n                <Tabs\n                    value={activeTab}\n                    onChange={handleChange}\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                    variant=\"scrollable\"\n                    scrollButtons=\"auto\"\n                    aria-label=\"scrollable auto tabs example\"\n                >\n                    {TabsLabel}\n                </Tabs>\n            </AppBar>\n            {TabsContent}\n        </div>\n    );\n}\n","import React from 'react'\nimport { Props as HeaderProps, DocSave } from \"./Admin.Doc.Header.Save\";\nimport DocTabs, { Tab } from \"./Admin.Doc.Tabs\";\nimport { makeStyles, createStyles, Theme } from 'template-core/styles';\nimport Paper from 'template-core/Paper';\nimport Grid from 'template-core/Grid';\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            flexGrow: 1,\n        },\n        paper: {\n            padding: theme.spacing(1),\n            textAlign: 'left',\n            color: theme.palette.text.secondary,\n        },\n        link: {\n            display: 'flex',\n        },\n        icon: {\n            marginRight: theme.spacing(0.5),\n            width: 20,\n            height: 20,\n        },\n        button: {\n            marginRight: theme.spacing(0.5)\n        }\n    }),\n);\ninterface Props {\n    breadcrum: HeaderProps['breadcrum'],\n    tabs: Tab[],\n}\n\nexport function Doc(props: Props) {\n    const classes = useStyles();\n    //mutation is together, queries is for each tab,\n    //mutation params with reac-router-dom useParams() for get the id \n    const mutation: HeaderProps['gql']['mutation'] = new Map()\n    return (\n        <>\n            <div className={classes.root}>\n                <Grid container >\n                    <Grid item xs={12}>\n                        <Paper className={classes.paper}>\n                            <Grid container >\n                                <Grid item xs={2} >\n                                    <DocSave\n                                        breadcrum={props.breadcrum}\n                                        gql={{\n                                            mutation\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={10}>\n                                    TODO, require.context other actions like email\n                                </Grid>\n                            </Grid>\n                        </Paper>\n                    </Grid>\n                </Grid>\n            </div>\n            <DocTabs tabs={props.tabs} mutation={mutation} />\n        </>\n    )\n}"],"sourceRoot":""}